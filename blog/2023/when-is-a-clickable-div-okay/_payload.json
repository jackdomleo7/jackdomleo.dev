[{"data":1,"prerenderedAt":636},["ShallowReactive",2],{"$siNM9WAguS":3,"$mMA9bTNYLP":33,"article-when-is-a-clickable-div-okay":115,"$rpzcfBTaqR":482,"article-list-when-is-a-clickable-div-okay":499},{"metadata":4,"sys":6,"fields":21},{"tags":5},[],{"space":7,"id":12,"type":13,"createdAt":14,"updatedAt":14,"environment":15,"revision":19,"locale":20},{"sys":8},{"type":9,"linkType":10,"id":11},"Link","Space","l1wujzr3g1ab","2HwSTbJwsbPDLabrSltaa3","Asset","2023-02-04T20:48:16.198Z",{"sys":16},{"id":17,"type":9,"linkType":18},"master","Environment",1,"en-GB",{"title":22,"description":23,"file":24},"Open Graphic","Jack Domleo. Frontend & UX Developer.",{"url":25,"details":26,"fileName":31,"contentType":32},"//images.ctfassets.net/l1wujzr3g1ab/2HwSTbJwsbPDLabrSltaa3/b8c5098e2bfd7f192665fccfa3e3380e/og.png",{"size":27,"image":28},8570,{"width":29,"height":30},1200,630,"og.png","image/png",{"sys":34,"total":19,"skip":36,"limit":19,"items":37},{"type":35},"Array",0,[38],{"metadata":39,"sys":42,"fields":56},{"tags":40,"concepts":41},[],[],{"space":43,"id":45,"type":46,"createdAt":47,"updatedAt":48,"environment":49,"revision":51,"contentType":52,"locale":20},{"sys":44},{"type":9,"linkType":10,"id":11},"6LjVGiRVd7SMt9ewdVBNbQ","Entry","2023-01-01T15:40:18.235Z","2023-12-16T18:46:15.368Z",{"sys":50},{"id":17,"type":9,"linkType":18},12,{"sys":53},{"type":9,"linkType":54,"id":55},"ContentType","footer",{"name":57,"quickLinks":58,"socialLinks":75,"legalText":88},"Footer",[59,63,67,71],{"id":60,"key":61,"value":62},"dbd24c1c-5840-4132-af46-08b3762b393b","Home","/",{"id":64,"key":65,"value":66},"3b093617-4c9c-41b7-ab57-72a53a2cb400","Blog","/blog",{"id":68,"key":69,"value":70},"6d25b987-cc30-4b09-93f3-fd6d947c7ffc","Links","/links",{"id":72,"key":73,"value":74},"ceaccf06-ba0a-41d5-9202-56beaaa5f242","Projects","/projects",[76,80,84],{"id":77,"key":78,"value":79},"6ca24d29-3228-4215-8b8e-32ad04743b65","GitHub","https://github.com/jackdomleo7",{"id":81,"key":82,"value":83},"46719126-f516-4853-9444-e40cd0576918","CodePen","https://codepen.io/jackdomleo7",{"id":85,"key":86,"value":87},"c1581e8d-c729-4232-8944-0f767d94177d","LinkedIn","https://linkedin.com/in/jackdomleo7",{"data":89,"content":90,"nodeType":114},{},[91,100,107],{"data":92,"content":93,"nodeType":99},{},[94],{"data":95,"marks":96,"value":97,"nodeType":98},{},[],"Â©2018-2024","text","paragraph",{"data":101,"content":102,"nodeType":99},{},[103],{"data":104,"marks":105,"value":106,"nodeType":98},{},[],"All rights reserved.",{"data":108,"content":109,"nodeType":99},{},[110],{"data":111,"marks":112,"value":113,"nodeType":98},{},[],"Jack Domleo","document",{"sys":116,"total":19,"skip":36,"limit":19,"items":117,"includes":480},{"type":35},[118],{"metadata":119,"sys":122,"fields":134},{"tags":120,"concepts":121},[],[],{"space":123,"id":125,"type":46,"createdAt":126,"updatedAt":127,"environment":128,"revision":130,"contentType":131,"locale":20},{"sys":124},{"type":9,"linkType":10,"id":11},"brxitJC35PyChlVzusyLP","2023-07-18T19:03:23.464Z","2023-07-18T19:37:51.212Z",{"sys":129},{"id":17,"type":9,"linkType":18},2,{"sys":132},{"type":9,"linkType":54,"id":133},"article",{"title":135,"slug":136,"image":137,"description":156,"publishDate":157,"tags":158,"body":162},"When is a clickable div okay?","when-is-a-clickable-div-okay",{"metadata":138,"sys":140,"fields":147},{"tags":139},[],{"space":141,"id":143,"type":13,"createdAt":144,"updatedAt":144,"environment":145,"revision":19,"locale":20},{"sys":142},{"type":9,"linkType":10,"id":11},"3nzHtHCAq4EKudWvrOOw4p","2023-07-11T21:23:08.036Z",{"sys":146},{"id":17,"type":9,"linkType":18},{"title":148,"description":149,"file":150},"When is a clickable div okay","An example modal element",{"url":151,"details":152,"fileName":155,"contentType":32},"//images.ctfassets.net/l1wujzr3g1ab/3nzHtHCAq4EKudWvrOOw4p/8bd8a51d97f431c933084f4413036eec/when-is-a-clickable-div-okay.png",{"size":153,"image":154},133997,{"width":29,"height":30},"when-is-a-clickable-div-okay.png","When it comes to accessibility, putting a click event on a div is taboo, but when is it okay to do so?","2023-07-18",[159,160,161],"Accessibility","UX","HTML",{"nodeType":114,"data":163,"content":164},{},[165,185,193,218,250,284,291,298,305,312,330,337,381,396,421,452,459],{"nodeType":99,"data":166,"content":167},{},[168,172,181],{"nodeType":98,"value":169,"marks":170,"data":171},"A ",[],{},{"nodeType":173,"data":174,"content":176},"hyperlink",{"uri":175},"https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event",[177],{"nodeType":98,"value":178,"marks":179,"data":180},"click event",[],{},{"nodeType":98,"value":182,"marks":183,"data":184}," is an event listener that listens for a user's click (or a tap if on a touchscreen device), and then some custom JavaScript can be run once triggered. JavaScript and HTML allow us to put click events on any HTML element, but just because we can doesn't mean we should.",[],{},{"nodeType":186,"data":187,"content":188},"heading-2",{},[189],{"nodeType":98,"value":190,"marks":191,"data":192},"Why is putting a click event on a div a bad idea?",[],{},{"nodeType":99,"data":194,"content":195},{},[196,200,206,210,214],{"nodeType":98,"value":197,"marks":198,"data":199},"There are countless articles on the web advising not to put click events on ",[],{},{"nodeType":98,"value":201,"marks":202,"data":205},"\u003Cdiv>",[203],{"type":204},"code",{},{"nodeType":98,"value":207,"marks":208,"data":209}," HTML elements, but that's not the focus of this article, this article is quite the opposite so here is a TL;DR of why you should not put click events on ",[],{},{"nodeType":98,"value":201,"marks":211,"data":213},[212],{"type":204},{},{"nodeType":98,"value":215,"marks":216,"data":217}," HTML elements.",[],{},{"nodeType":99,"data":219,"content":220},{},[221,224,228,232,237,241,246],{"nodeType":98,"value":169,"marks":222,"data":223},[],{},{"nodeType":98,"value":201,"marks":225,"data":227},[226],{"type":204},{},{"nodeType":98,"value":229,"marks":230,"data":231}," HTML element, with no ",[],{},{"nodeType":98,"value":233,"marks":234,"data":236},"role",[235],{"type":204},{},{"nodeType":98,"value":238,"marks":239,"data":240}," attribute, is semantic-less: i.e. it has no semantic value at all, it solely exists for layout and styling purposes. This means, screenreaders or tabbing on a keyboard for example, will completely skip all semantic-less elements. A ",[],{},{"nodeType":98,"value":242,"marks":243,"data":245},"\u003Cspan>",[244],{"type":204},{},{"nodeType":98,"value":247,"marks":248,"data":249}," is also a semantic-less HTML element. If these elements are being skipped, users who rely on screenreaders or keyboards are going to have a difficult time interacting with your element (hint: they won't be able to at all).",[],{},{"nodeType":99,"data":251,"content":252},{},[253,257,262,266,271,275,280],{"nodeType":98,"value":254,"marks":255,"data":256},"You could put ",[],{},{"nodeType":98,"value":258,"marks":259,"data":261},"tabindex=\"0\"",[260],{"type":204},{},{"nodeType":98,"value":263,"marks":264,"data":265}," on the semantic-less element, meaning keyboards can now focus the element, but you lose so much other semantic value by not using the correct HTML in the first place: ",[],{},{"nodeType":98,"value":267,"marks":268,"data":270},"\u003Cbutton onclick=\"\">...\u003C/button>",[269],{"type":204},{},{"nodeType":98,"value":272,"marks":273,"data":274}," (recommended) or ",[],{},{"nodeType":98,"value":276,"marks":277,"data":279},"\u003Cdiv role=\"button\" onclick=\"\">...\u003C/div>",[278],{"type":204},{},{"nodeType":98,"value":281,"marks":282,"data":283},".",[],{},{"nodeType":99,"data":285,"content":286},{},[287],{"nodeType":98,"value":288,"marks":289,"data":290},"You can, by all means, put a click event on any element, you just need to ensure you're using the click event correctly and wisely.",[],{},{"nodeType":186,"data":292,"content":293},{},[294],{"nodeType":98,"value":295,"marks":296,"data":297},"When is it okay to put a click event on a div?",[],{},{"nodeType":99,"data":299,"content":300},{},[301],{"nodeType":98,"value":302,"marks":303,"data":304},"Now that we know it is taboo to put click events on semantic-less elements, let's explore a scenario where it would be considered perfectly fine to put a click event on a semantic-less element.",[],{},{"nodeType":99,"data":306,"content":307},{},[308],{"nodeType":98,"value":309,"marks":310,"data":311},"Behold... The Mighty Modal!",[],{},{"nodeType":99,"data":313,"content":314},{},[315,319,327],{"nodeType":98,"value":316,"marks":317,"data":318},"",[],{},{"nodeType":173,"data":320,"content":322},{"uri":321},"https://codepen.io/jackdomleo7/embed/yLJLOQr",[323],{"nodeType":98,"value":324,"marks":325,"data":326},"CodePen: A11y modal",[],{},{"nodeType":98,"value":316,"marks":328,"data":329},[],{},{"nodeType":99,"data":331,"content":332},{},[333],{"nodeType":98,"value":334,"marks":335,"data":336},"A modal is a fancy name for a pop-up window. When we consider a modal, as users, we typically assume there are 3 methods to close the modal:",[],{},{"nodeType":338,"data":339,"content":340},"ordered-list",{},[341,352,362],{"nodeType":342,"data":343,"content":344},"list-item",{},[345],{"nodeType":99,"data":346,"content":347},{},[348],{"nodeType":98,"value":349,"marks":350,"data":351},"Clicking the cross in the top corner",[],{},{"nodeType":342,"data":353,"content":354},{},[355],{"nodeType":99,"data":356,"content":357},{},[358],{"nodeType":98,"value":359,"marks":360,"data":361},"Clicking the greyed-out area behind the modal",[],{},{"nodeType":342,"data":363,"content":364},{},[365],{"nodeType":99,"data":366,"content":367},{},[368,372,377],{"nodeType":98,"value":369,"marks":370,"data":371},"Pressing the ",[],{},{"nodeType":98,"value":373,"marks":374,"data":376},"Esc",[375],{"type":204},{},{"nodeType":98,"value":378,"marks":379,"data":380}," key on the keyboard",[],{},{"nodeType":99,"data":382,"content":383},{},[384,388,392],{"nodeType":98,"value":385,"marks":386,"data":387},"There may also be a \"Cancel\", \"Close\" or similar call-to-action button on the modal. In this case, we can ignore the ",[],{},{"nodeType":98,"value":373,"marks":389,"data":391},[390],{"type":204},{},{"nodeType":98,"value":393,"marks":394,"data":395}," key method, since this is not related to clicking.",[],{},{"nodeType":99,"data":397,"content":398},{},[399,403,408,412,417],{"nodeType":98,"value":400,"marks":401,"data":402},"So, the 2 ways a user can close a modal by clicking is by clicking the cross, and by clicking the greyed-out area. The cross should obviously be a ",[],{},{"nodeType":98,"value":404,"marks":405,"data":407},"\u003Cbutton>X\u003C/button>",[406],{"type":204},{},{"nodeType":98,"value":409,"marks":410,"data":411}," since it is a user action. But what about the greyed-out area, should this be a ",[],{},{"nodeType":98,"value":413,"marks":414,"data":416},"button",[415],{"type":204},{},{"nodeType":98,"value":418,"marks":419,"data":420}," element too?",[],{},{"nodeType":99,"data":422,"content":423},{},[424,428,432,436,440,444,448],{"nodeType":98,"value":425,"marks":426,"data":427},"It could be a ",[],{},{"nodeType":98,"value":413,"marks":429,"data":431},[430],{"type":204},{},{"nodeType":98,"value":433,"marks":434,"data":435}," element, but it would make the code look ugly and it isn't really necessary in this case. For this modal to be considered accessible, it needs at least 1 way for each type of user to close the modal. We have a semantic ",[],{},{"nodeType":98,"value":413,"marks":437,"data":439},[438],{"type":204},{},{"nodeType":98,"value":441,"marks":442,"data":443}," element for the cross that a user can click or tab to, and we have the ",[],{},{"nodeType":98,"value":373,"marks":445,"data":447},[446],{"type":204},{},{"nodeType":98,"value":449,"marks":450,"data":451}," key handler for keyboard users. This should cover the majority of users if not all.",[],{},{"nodeType":99,"data":453,"content":454},{},[455],{"nodeType":98,"value":456,"marks":457,"data":458},"Clicking the greyed-out area is a nice-to-have minor UX (user experience) improvement. A user who relies on semantic elements so that they can be identified by screenreaders and keyboards is not going to expect that they can interact with the greyed-out area, it might actually confuse them more if they see a huge focus ring around the entire greyed-out section, causing poorer UX for these users since they may not associate it with closing the modal.",[],{},{"nodeType":99,"data":460,"content":461},{},[462,466,471,476],{"nodeType":98,"value":463,"marks":464,"data":465},"In this case, we can add a nice simple ",[],{},{"nodeType":98,"value":467,"marks":468,"data":470},"\u003Cdiv onclick=\"\">\u003C",[469],{"type":204},{},{"nodeType":98,"value":472,"marks":473,"data":475},"/div>",[474],{"type":204},{},{"nodeType":98,"value":477,"marks":478,"data":479}," for the greyed-out area and not have to worry about harming accessibility. Simple.",[],{},{"Asset":481},[137],{"sys":483,"total":19,"skip":36,"limit":19,"items":484},{"type":35},[485],{"fields":486,"sys":497},{"articleDisclaimer":487},{"data":488,"content":489,"nodeType":114},{},[490],{"data":491,"content":492,"nodeType":99},{},[493],{"data":494,"marks":495,"value":496,"nodeType":98},{},[],"Disclaimer: All data and information are correct to the best of my knowledge at the time of writing.",{"id":498,"type":46},"3Viop9UQLlIrWglTQjk5Bd",{"sys":500,"total":501,"skip":36,"limit":502,"items":503,"includes":622},{"type":35},5,1000,[504,534,564,593],{"fields":505,"sys":532},{"title":506,"description":507,"image":508,"tags":528,"publishDate":530,"slug":531},"How to protect state in Pinia ð","Pinia, unlike Vuex, allows the state to be mutated directly, but sometimes we want to protect the state from being changed willy-nilly.",{"metadata":509,"sys":511,"fields":519},{"tags":510},[],{"space":512,"id":514,"type":13,"createdAt":515,"updatedAt":516,"environment":517,"revision":130,"locale":20},{"sys":513},{"type":9,"linkType":10,"id":11},"5iurYkErtwupD6LkJba4Jd","2024-03-23T20:34:09.782Z","2024-03-23T20:36:22.415Z",{"sys":518},{"id":17,"type":9,"linkType":18},{"title":520,"description":520,"file":521},"Pineapple",{"url":522,"details":523,"fileName":526,"contentType":527},"//images.ctfassets.net/l1wujzr3g1ab/5iurYkErtwupD6LkJba4Jd/eb717e6e4789957a33423f5f9fea4197/sumner-mahaffey-7vCt_lFxKx4-unsplash.jpg",{"size":524,"image":525},153411,{"width":29,"height":30},"sumner-mahaffey-7vCt_lFxKx4-unsplash.jpg","image/jpeg",[529],"Vue","2024-04-07","how-to-protect-state-in-pinia",{"id":533,"type":46},"7CUW25a1jLiar8pzd8K9Nh",{"fields":535,"sys":562},{"title":536,"description":537,"image":538,"tags":557,"publishDate":560,"slug":561},"Should you clean out your blog?","If like me, you own a blog, you may ask yourself if it's ever a good idea to clean it out from time to time.",{"metadata":539,"sys":541,"fields":548},{"tags":540},[],{"space":542,"id":544,"type":13,"createdAt":545,"updatedAt":545,"environment":546,"revision":19,"locale":20},{"sys":543},{"type":9,"linkType":10,"id":11},"6Fk3J1WEn0YRhIGUawl63P","2023-02-15T20:26:31.807Z",{"sys":547},{"id":17,"type":9,"linkType":18},{"title":549,"description":550,"file":551},"clutter","A cluttered office desk",{"url":552,"details":553,"fileName":556,"contentType":527},"//images.ctfassets.net/l1wujzr3g1ab/6Fk3J1WEn0YRhIGUawl63P/a98a9a5ba72aef1afc04111bc7a9e5f9/clutter.jpg",{"size":554,"image":555},281805,{"width":29,"height":30},"clutter.jpg",[558,559,161],"Tips","Productivity","2023-02-16","should-you-clean-out-your-blog",{"id":563,"type":46},"9dijdAHS9ROnOwXit47NQ",{"fields":565,"sys":591},{"title":566,"description":567,"image":568,"tags":587,"publishDate":589,"slug":590},"@media (hover: hover) - CSS Media Query","The hover CSS media feature can be used to test whether the user's primary input mechanism can hover over elements.",{"metadata":569,"sys":571,"fields":578},{"tags":570},[],{"space":572,"id":574,"type":13,"createdAt":575,"updatedAt":575,"environment":576,"revision":19,"locale":20},{"sys":573},{"type":9,"linkType":10,"id":11},"1BWwf3Fg2A0y1RhcY7oNqq","2023-01-22T21:55:22.730Z",{"sys":577},{"id":17,"type":9,"linkType":18},{"title":579,"description":580,"file":581},"css=hover-media-query-og","CSS media query for hover",{"url":582,"details":583,"fileName":586,"contentType":32},"//images.ctfassets.net/l1wujzr3g1ab/1BWwf3Fg2A0y1RhcY7oNqq/0dadb7c242364de5ac4f5b63dd57f1b6/css_hover-media-query-og.png",{"size":584,"image":585},13019,{"width":29,"height":30},"css=hover-media-query-og.png",[588],"CSS","2020-07-06","hover-css-media-query",{"id":592,"type":46},"5GKjEQKbXAneX7HsUv1qtm",{"fields":594,"sys":620},{"title":595,"description":596,"image":597,"tags":616,"publishDate":618,"slug":619},"Learning Neumorphic Design","The awesome design trend that never took off! What are the fundamentals to neumorphic design?",{"metadata":598,"sys":600,"fields":607},{"tags":599},[],{"space":601,"id":603,"type":13,"createdAt":604,"updatedAt":604,"environment":605,"revision":19,"locale":20},{"sys":602},{"type":9,"linkType":10,"id":11},"T6RRM5TpnSzYm6UQolMMf","2023-01-24T20:35:16.287Z",{"sys":606},{"id":17,"type":9,"linkType":18},{"title":608,"description":609,"file":610},"neumorphic-design-og","A music player UI with a neumorphism design",{"url":611,"details":612,"fileName":615,"contentType":32},"//images.ctfassets.net/l1wujzr3g1ab/T6RRM5TpnSzYm6UQolMMf/a51b32aea0faa8885d8e525c436b5073/neumorphic-design-og.png",{"size":613,"image":614},6959,{"width":29,"height":30},"neumorphic-design-og.png",[617,588],"Design","2020-05-27","learning-neumorphic-design",{"id":621,"type":46},"2KWdODn6oaRYNzG4Qz4yd3",{"Asset":623},[568,624,508,538,597],{"metadata":625,"sys":627,"fields":632},{"tags":626},[],{"space":628,"id":143,"type":13,"createdAt":144,"updatedAt":144,"environment":630,"revision":19,"locale":20},{"sys":629},{"type":9,"linkType":10,"id":11},{"sys":631},{"id":17,"type":9,"linkType":18},{"title":148,"description":149,"file":633},{"url":151,"details":634,"fileName":155,"contentType":32},{"size":153,"image":635},{"width":29,"height":30},1728435888837]