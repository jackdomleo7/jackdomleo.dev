[{"data":1,"prerenderedAt":615},["Reactive",2],{"$siNM9WAguS":3,"$mMA9bTNYLP":33,"article-hover-css-media-query":114,"$rpzcfBTaqR":458,"article-list-hover-css-media-query":475},{"metadata":4,"sys":6,"fields":21},{"tags":5},[],{"space":7,"id":12,"type":13,"createdAt":14,"updatedAt":14,"environment":15,"revision":19,"locale":20},{"sys":8},{"type":9,"linkType":10,"id":11},"Link","Space","l1wujzr3g1ab","2HwSTbJwsbPDLabrSltaa3","Asset","2023-02-04T20:48:16.198Z",{"sys":16},{"id":17,"type":9,"linkType":18},"master","Environment",1,"en-GB",{"title":22,"description":23,"file":24},"Open Graphic","Jack Domleo. Frontend & UX Developer.",{"url":25,"details":26,"fileName":31,"contentType":32},"//images.ctfassets.net/l1wujzr3g1ab/2HwSTbJwsbPDLabrSltaa3/b8c5098e2bfd7f192665fccfa3e3380e/og.png",{"size":27,"image":28},8570,{"width":29,"height":30},1200,630,"og.png","image/png",{"sys":34,"total":19,"skip":36,"limit":19,"items":37},{"type":35},"Array",0,[38],{"metadata":39,"sys":41,"fields":55},{"tags":40},[],{"space":42,"id":44,"type":45,"createdAt":46,"updatedAt":47,"environment":48,"revision":50,"contentType":51,"locale":20},{"sys":43},{"type":9,"linkType":10,"id":11},"6LjVGiRVd7SMt9ewdVBNbQ","Entry","2023-01-01T15:40:18.235Z","2023-12-16T18:46:15.368Z",{"sys":49},{"id":17,"type":9,"linkType":18},12,{"sys":52},{"type":9,"linkType":53,"id":54},"ContentType","footer",{"name":56,"quickLinks":57,"socialLinks":74,"legalText":87},"Footer",[58,62,66,70],{"id":59,"key":60,"value":61},"dbd24c1c-5840-4132-af46-08b3762b393b","Home","/",{"id":63,"key":64,"value":65},"3b093617-4c9c-41b7-ab57-72a53a2cb400","Blog","/blog",{"id":67,"key":68,"value":69},"6d25b987-cc30-4b09-93f3-fd6d947c7ffc","Links","/links",{"id":71,"key":72,"value":73},"ceaccf06-ba0a-41d5-9202-56beaaa5f242","Projects","/projects",[75,79,83],{"id":76,"key":77,"value":78},"6ca24d29-3228-4215-8b8e-32ad04743b65","GitHub","https://github.com/jackdomleo7",{"id":80,"key":81,"value":82},"46719126-f516-4853-9444-e40cd0576918","CodePen","https://codepen.io/jackdomleo7",{"id":84,"key":85,"value":86},"c1581e8d-c729-4232-8944-0f767d94177d","LinkedIn","https://linkedin.com/in/jackdomleo7",{"data":88,"content":89,"nodeType":113},{},[90,99,106],{"data":91,"content":92,"nodeType":98},{},[93],{"data":94,"marks":95,"value":96,"nodeType":97},{},[],"©2018-2024","text","paragraph",{"data":100,"content":101,"nodeType":98},{},[102],{"data":103,"marks":104,"value":105,"nodeType":97},{},[],"All rights reserved.",{"data":107,"content":108,"nodeType":98},{},[109],{"data":110,"marks":111,"value":112,"nodeType":97},{},[],"Jack Domleo","document",{"sys":115,"total":19,"skip":36,"limit":19,"items":116,"includes":456},{"type":35},[117],{"metadata":118,"sys":120,"fields":132},{"tags":119},[],{"space":121,"id":123,"type":45,"createdAt":124,"updatedAt":125,"environment":126,"revision":128,"contentType":129,"locale":20},{"sys":122},{"type":9,"linkType":10,"id":11},"5GKjEQKbXAneX7HsUv1qtm","2023-01-22T21:55:27.965Z","2023-01-24T08:10:50.331Z",{"sys":127},{"id":17,"type":9,"linkType":18},13,{"sys":130},{"type":9,"linkType":53,"id":131},"article",{"title":133,"slug":134,"image":135,"description":154,"publishDate":155,"tags":156,"body":158},"@media (hover: hover) - CSS Media Query","hover-css-media-query",{"metadata":136,"sys":138,"fields":145},{"tags":137},[],{"space":139,"id":141,"type":13,"createdAt":142,"updatedAt":142,"environment":143,"revision":19,"locale":20},{"sys":140},{"type":9,"linkType":10,"id":11},"1BWwf3Fg2A0y1RhcY7oNqq","2023-01-22T21:55:22.730Z",{"sys":144},{"id":17,"type":9,"linkType":18},{"title":146,"description":147,"file":148},"css=hover-media-query-og","CSS media query for hover",{"url":149,"details":150,"fileName":153,"contentType":32},"//images.ctfassets.net/l1wujzr3g1ab/1BWwf3Fg2A0y1RhcY7oNqq/0dadb7c242364de5ac4f5b63dd57f1b6/css_hover-media-query-og.png",{"size":151,"image":152},13019,{"width":29,"height":30},"css=hover-media-query-og.png","The hover CSS media feature can be used to test whether the user's primary input mechanism can hover over elements.","2020-07-06",[157],"CSS",{"nodeType":113,"data":159,"content":160},{},[161,192,219,235,242,250,258,265,272,283,290,306,317,324,331,354,365,380,387,427,431,438],{"nodeType":162,"data":163,"content":164},"blockquote",{},[165,172],{"nodeType":98,"data":166,"content":167},{},[168],{"nodeType":97,"value":169,"marks":170,"data":171},"The `hover` CSS media feature can be used to test whether the user's primary input mechanism can hover over elements.",[],{},{"nodeType":98,"data":173,"content":174},{},[175,179,188],{"nodeType":97,"value":176,"marks":177,"data":178},"- ",[],{},{"nodeType":180,"data":181,"content":183},"hyperlink",{"uri":182},"https://developer.mozilla.org/en-US/docs/Web/CSS/@media/hover",[184],{"nodeType":97,"value":185,"marks":186,"data":187},"MDN web docs",[],{},{"nodeType":97,"value":189,"marks":190,"data":191},"\r",[],{},{"nodeType":98,"data":193,"content":194},{},[195,199,205,209,215],{"nodeType":97,"value":196,"marks":197,"data":198},"Not to be confused with the ",[],{},{"nodeType":97,"value":200,"marks":201,"data":204},":hover",[202],{"type":203},"code",{},{"nodeType":97,"value":206,"marks":207,"data":208}," psuedo selector, this is a ",[],{},{"nodeType":97,"value":210,"marks":211,"data":214},"media query",[212],{"type":213},"bold",{},{"nodeType":97,"value":216,"marks":217,"data":218}," you may have never used or never considered using.\r",[],{},{"nodeType":98,"data":220,"content":221},{},[222,226,231],{"nodeType":97,"value":223,"marks":224,"data":225},"Let's look at an example and see how it could be improved using the ",[],{},{"nodeType":97,"value":227,"marks":228,"data":230},"hover",[229],{"type":203},{},{"nodeType":97,"value":232,"marks":233,"data":234}," media query.",[],{},{"nodeType":98,"data":236,"content":237},{},[238],{"nodeType":97,"value":239,"marks":240,"data":241},"Let's assume we're using this HTML for the below demonstration.\r",[],{},{"nodeType":98,"data":243,"content":244},{},[245],{"nodeType":97,"value":246,"marks":247,"data":249},"HTML\n\u003Cbutton class=\"button\">\n  Hover me\r\n  \u003Csvg>...\u003C/svg>\r\n\u003C/button>\r",[248],{"type":203},{},{"nodeType":251,"data":252,"content":253},"heading-2",{},[254],{"nodeType":97,"value":255,"marks":256,"data":257},"Showing an icon on hover\r",[],{},{"nodeType":98,"data":259,"content":260},{},[261],{"nodeType":97,"value":262,"marks":263,"data":264},"This is a typical feature request. It's not very detailed, but as front-end developers, it's enough for us to work with and create a prototype button at the least.\r",[],{},{"nodeType":98,"data":266,"content":267},{},[268],{"nodeType":97,"value":269,"marks":270,"data":271},"For this to work, we may jump to do something like this:\r",[],{},{"nodeType":98,"data":273,"content":274},{},[275,280],{"nodeType":97,"value":276,"marks":277,"data":279},"CSS\n.button {\r\n  background: darkorange;\r\n  color: white;\r\n  border: none;\r\n  padding: 1rem;\r\n  text-align: center;\r\n  position: relative;\r\n  cursor: pointer;\r\n}\n\r\n.button svg {\r\n  height: 2rem;\r\n  width: 2rem;\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 0.6rem;\r\n  fill: currentColor;\r\n  opacity: 0;\r\n}\n\r\n.button:hover {\r\n  padding-right: 3rem;\r\n}\n\r\n.button:hover svg {\r\n  opacity: 1;\r\n}",[278],{"type":203},{},{"nodeType":97,"value":189,"marks":281,"data":282},[],{},{"nodeType":98,"data":284,"content":285},{},[286],{"nodeType":97,"value":287,"marks":288,"data":289},"This would for sure show the icon when the button is hovered! 💪 But it doesn't work on my mobile... It doesn't know I'm hovering the button.\r",[],{},{"nodeType":98,"data":291,"content":292},{},[293,297,302],{"nodeType":97,"value":294,"marks":295,"data":296},"So, how do we cater for touchscreen devices that can't hover? A common solution would be to always display the icon on _mobile devices (take note of this, I will come back to it later)_ and add the hovering functionality for larger screens by using a ",[],{},{"nodeType":97,"value":298,"marks":299,"data":301},"min-width",[300],{"type":203},{},{"nodeType":97,"value":303,"marks":304,"data":305}," media query, typically these are screens that are 768px or wider:\r",[],{},{"nodeType":98,"data":307,"content":308},{},[309,314],{"nodeType":97,"value":310,"marks":311,"data":313},"CSS\n.button {\r\n  background: darkorange;\r\n  color: white;\r\n  border: none;\r\n  padding: 1rem;\r\n  padding-right: 3rem;\r\n  text-align: center;\r\n  position: relative;\r\n}\n\r\n.button svg {\r\n  height: 2rem;\r\n  width: 2rem;\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 0.6rem;\r\n  fill: currentColor;\r\n  opacity: 1;\r\n}\n\r\n@media (min-width: 768px) {\r\n  .button {\r\n    padding-right: 1rem;\r\n    cursor: pointer;\r\n  }\n\r\n  .button svg {\r\n    opacity: 0;\r\n  }\n\r\n  .button:hover {\r\n    padding-right: 3rem;\r\n  }\n\r\n  .button:hover svg {\r\n    opacity: 1;\r\n  }\r\n}",[312],{"type":203},{},{"nodeType":97,"value":189,"marks":315,"data":316},[],{},{"nodeType":98,"data":318,"content":319},{},[320],{"nodeType":97,"value":321,"marks":322,"data":323},"Great! We now have a button that always shows the icon on devices with a screen width less than 768px and will initially hide the icon on devices with a screen width of 768px wide or wider.\r",[],{},{"nodeType":98,"data":325,"content":326},{},[327],{"nodeType":97,"value":328,"marks":329,"data":330},"Chances are, this works for most cases and has been an acceptable solution for many years. However, we can't assume a device doesn't have a hover input mechanism just because of its screen width, and vice-versa.\r",[],{},{"nodeType":98,"data":332,"content":333},{},[334,338,342,346,350],{"nodeType":97,"value":335,"marks":336,"data":337},"This is where our `hover` media query comes in. Let's take a look at how we can refactor our ",[],{},{"nodeType":97,"value":298,"marks":339,"data":341},[340],{"type":203},{},{"nodeType":97,"value":343,"marks":344,"data":345}," to use ",[],{},{"nodeType":97,"value":227,"marks":347,"data":349},[348],{"type":203},{},{"nodeType":97,"value":351,"marks":352,"data":353}," instead.",[],{},{"nodeType":98,"data":355,"content":356},{},[357,362],{"nodeType":97,"value":358,"marks":359,"data":361},"CSS\n.button {\r\n  background: darkorange;\r\n  color: white;\r\n  border: none;\r\n  padding: 1rem;\r\n  padding-right: 3rem;\r\n  text-align: center;\r\n  position: relative;\r\n}\n\r\n.button svg {\r\n  height: 2rem;\r\n  width: 2rem;\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 0.6rem;\r\n  fill: currentColor;\r\n  opacity: 1;\r\n}\n\r\n@media (hover: hover) {\r\n  .button {\r\n    padding-right: 1rem;\r\n    cursor: pointer;\r\n  }\n\r\n  .button svg {\r\n    opacity: 0;\r\n  }\n\r\n  .button:hover {\r\n    padding-right: 3rem;\r\n  }\n\r\n  .button:hover svg {\r\n    opacity: 1;\r\n  }\r\n}",[360],{"type":203},{},{"nodeType":97,"value":189,"marks":363,"data":364},[],{},{"nodeType":98,"data":366,"content":367},{},[368,372,376],{"nodeType":97,"value":369,"marks":370,"data":371},"Outside any media query, we define our base styles that apply to everything. Inside our ",[],{},{"nodeType":97,"value":227,"marks":373,"data":375},[374],{"type":203},{},{"nodeType":97,"value":377,"marks":378,"data":379}," media query, we define styles specific to devices with a hover input mechanism.\r",[],{},{"nodeType":98,"data":381,"content":382},{},[383],{"nodeType":97,"value":384,"marks":385,"data":386},"Can you see how this is better than determining hover-specific styles based on screen size?\r",[],{},{"nodeType":98,"data":388,"content":389},{},[390,394,398,402,407,411,415,419,423],{"nodeType":97,"value":391,"marks":392,"data":393},"It's also a cleaner method because we define our ",[],{},{"nodeType":97,"value":227,"marks":395,"data":397},[396],{"type":213},{},{"nodeType":97,"value":399,"marks":400,"data":401}," styles in our ",[],{},{"nodeType":97,"value":227,"marks":403,"data":406},[404,405],{"type":213},{"type":203},{},{"nodeType":97,"value":408,"marks":409,"data":410}," media query, it's grouped them nicely for us. These ",[],{},{"nodeType":97,"value":227,"marks":412,"data":414},[413],{"type":203},{},{"nodeType":97,"value":416,"marks":417,"data":418}," styles would be harder to identify in the stylesheet if they were encapsulated in a ",[],{},{"nodeType":97,"value":298,"marks":420,"data":422},[421],{"type":203},{},{"nodeType":97,"value":424,"marks":425,"data":426}," media query.\r",[],{},{"nodeType":428,"data":429,"content":430},"hr",{},[],{"nodeType":98,"data":432,"content":433},{},[434],{"nodeType":97,"value":435,"marks":436,"data":437},"For a working example, I created a CodePen below (with a few extra CSS properties) that I hope will help 🙂.",[],{},{"nodeType":98,"data":439,"content":440},{},[441,445,453],{"nodeType":97,"value":442,"marks":443,"data":444},"\r\n",[],{},{"nodeType":180,"data":446,"content":448},{"uri":447},"https://codepen.io/jackdomleo7/embed/jOWZRXX",[449],{"nodeType":97,"value":450,"marks":451,"data":452},"CodePen: hover: hover media query",[],{},{"nodeType":97,"value":189,"marks":454,"data":455},[],{},{"Asset":457},[135],{"sys":459,"total":19,"skip":36,"limit":19,"items":460},{"type":35},[461],{"fields":462,"sys":473},{"articleDisclaimer":463},{"data":464,"content":465,"nodeType":113},{},[466],{"data":467,"content":468,"nodeType":98},{},[469],{"data":470,"marks":471,"value":472,"nodeType":97},{},[],"Disclaimer: All data and information are correct to the best of my knowledge at the time of writing.",{"id":474,"type":45},"3Viop9UQLlIrWglTQjk5Bd",{"sys":476,"total":477,"skip":36,"limit":478,"items":479,"includes":601},{"type":35},5,1000,[480,511,542,572],{"fields":481,"sys":509},{"title":482,"description":483,"image":484,"tags":505,"publishDate":507,"slug":508},"How to protect state in Pinia 🍍","Pinia, unlike Vuex, allows the state to be mutated directly, but sometimes we want to protect the state from being changed willy-nilly.",{"metadata":485,"sys":487,"fields":496},{"tags":486},[],{"space":488,"id":490,"type":13,"createdAt":491,"updatedAt":492,"environment":493,"revision":495,"locale":20},{"sys":489},{"type":9,"linkType":10,"id":11},"5iurYkErtwupD6LkJba4Jd","2024-03-23T20:34:09.782Z","2024-03-23T20:36:22.415Z",{"sys":494},{"id":17,"type":9,"linkType":18},2,{"title":497,"description":497,"file":498},"Pineapple",{"url":499,"details":500,"fileName":503,"contentType":504},"//images.ctfassets.net/l1wujzr3g1ab/5iurYkErtwupD6LkJba4Jd/eb717e6e4789957a33423f5f9fea4197/sumner-mahaffey-7vCt_lFxKx4-unsplash.jpg",{"size":501,"image":502},153411,{"width":29,"height":30},"sumner-mahaffey-7vCt_lFxKx4-unsplash.jpg","image/jpeg",[506],"Vue","2024-04-07","how-to-protect-state-in-pinia",{"id":510,"type":45},"7CUW25a1jLiar8pzd8K9Nh",{"fields":512,"sys":540},{"title":513,"description":514,"image":515,"tags":534,"publishDate":538,"slug":539},"When is a clickable div okay?","When it comes to accessibility, putting a click event on a div is taboo, but when is it okay to do so?",{"metadata":516,"sys":518,"fields":525},{"tags":517},[],{"space":519,"id":521,"type":13,"createdAt":522,"updatedAt":522,"environment":523,"revision":19,"locale":20},{"sys":520},{"type":9,"linkType":10,"id":11},"3nzHtHCAq4EKudWvrOOw4p","2023-07-11T21:23:08.036Z",{"sys":524},{"id":17,"type":9,"linkType":18},{"title":526,"description":527,"file":528},"When is a clickable div okay","An example modal element",{"url":529,"details":530,"fileName":533,"contentType":32},"//images.ctfassets.net/l1wujzr3g1ab/3nzHtHCAq4EKudWvrOOw4p/8bd8a51d97f431c933084f4413036eec/when-is-a-clickable-div-okay.png",{"size":531,"image":532},133997,{"width":29,"height":30},"when-is-a-clickable-div-okay.png",[535,536,537],"Accessibility","UX","HTML","2023-07-18","when-is-a-clickable-div-okay",{"id":541,"type":45},"brxitJC35PyChlVzusyLP",{"fields":543,"sys":570},{"title":544,"description":545,"image":546,"tags":565,"publishDate":568,"slug":569},"Should you clean out your blog?","If like me, you own a blog, you may ask yourself if it's ever a good idea to clean it out from time to time.",{"metadata":547,"sys":549,"fields":556},{"tags":548},[],{"space":550,"id":552,"type":13,"createdAt":553,"updatedAt":553,"environment":554,"revision":19,"locale":20},{"sys":551},{"type":9,"linkType":10,"id":11},"6Fk3J1WEn0YRhIGUawl63P","2023-02-15T20:26:31.807Z",{"sys":555},{"id":17,"type":9,"linkType":18},{"title":557,"description":558,"file":559},"clutter","A cluttered office desk",{"url":560,"details":561,"fileName":564,"contentType":504},"//images.ctfassets.net/l1wujzr3g1ab/6Fk3J1WEn0YRhIGUawl63P/a98a9a5ba72aef1afc04111bc7a9e5f9/clutter.jpg",{"size":562,"image":563},281805,{"width":29,"height":30},"clutter.jpg",[566,567,537],"Tips","Productivity","2023-02-16","should-you-clean-out-your-blog",{"id":571,"type":45},"9dijdAHS9ROnOwXit47NQ",{"fields":573,"sys":599},{"title":574,"description":575,"image":576,"tags":595,"publishDate":597,"slug":598},"Learning Neumorphic Design","The awesome design trend that never took off! What are the fundamentals to neumorphic design?",{"metadata":577,"sys":579,"fields":586},{"tags":578},[],{"space":580,"id":582,"type":13,"createdAt":583,"updatedAt":583,"environment":584,"revision":19,"locale":20},{"sys":581},{"type":9,"linkType":10,"id":11},"T6RRM5TpnSzYm6UQolMMf","2023-01-24T20:35:16.287Z",{"sys":585},{"id":17,"type":9,"linkType":18},{"title":587,"description":588,"file":589},"neumorphic-design-og","A music player UI with a neumorphism design",{"url":590,"details":591,"fileName":594,"contentType":32},"//images.ctfassets.net/l1wujzr3g1ab/T6RRM5TpnSzYm6UQolMMf/a51b32aea0faa8885d8e525c436b5073/neumorphic-design-og.png",{"size":592,"image":593},6959,{"width":29,"height":30},"neumorphic-design-og.png",[596,157],"Design","2020-05-27","learning-neumorphic-design",{"id":600,"type":45},"2KWdODn6oaRYNzG4Qz4yd3",{"Asset":602},[603,515,484,546,576],{"metadata":604,"sys":606,"fields":611},{"tags":605},[],{"space":607,"id":141,"type":13,"createdAt":142,"updatedAt":142,"environment":609,"revision":19,"locale":20},{"sys":608},{"type":9,"linkType":10,"id":11},{"sys":610},{"id":17,"type":9,"linkType":18},{"title":146,"description":147,"file":612},{"url":149,"details":613,"fileName":153,"contentType":32},{"size":151,"image":614},{"width":29,"height":30},1715648000993]