[{"data":1,"prerenderedAt":617},["ShallowReactive",2],{"$siNM9WAguS":3,"$mMA9bTNYLP":33,"article-hover-css-media-query":115,"$rpzcfBTaqR":460,"article-list-hover-css-media-query":477},{"metadata":4,"sys":6,"fields":21},{"tags":5},[],{"space":7,"id":12,"type":13,"createdAt":14,"updatedAt":14,"environment":15,"revision":19,"locale":20},{"sys":8},{"type":9,"linkType":10,"id":11},"Link","Space","l1wujzr3g1ab","2HwSTbJwsbPDLabrSltaa3","Asset","2023-02-04T20:48:16.198Z",{"sys":16},{"id":17,"type":9,"linkType":18},"master","Environment",1,"en-GB",{"title":22,"description":23,"file":24},"Open Graphic","Jack Domleo. Frontend & UX Developer.",{"url":25,"details":26,"fileName":31,"contentType":32},"//images.ctfassets.net/l1wujzr3g1ab/2HwSTbJwsbPDLabrSltaa3/b8c5098e2bfd7f192665fccfa3e3380e/og.png",{"size":27,"image":28},8570,{"width":29,"height":30},1200,630,"og.png","image/png",{"sys":34,"total":19,"skip":36,"limit":19,"items":37},{"type":35},"Array",0,[38],{"metadata":39,"sys":42,"fields":56},{"tags":40,"concepts":41},[],[],{"space":43,"id":45,"type":46,"createdAt":47,"updatedAt":48,"environment":49,"revision":51,"contentType":52,"locale":20},{"sys":44},{"type":9,"linkType":10,"id":11},"6LjVGiRVd7SMt9ewdVBNbQ","Entry","2023-01-01T15:40:18.235Z","2023-12-16T18:46:15.368Z",{"sys":50},{"id":17,"type":9,"linkType":18},12,{"sys":53},{"type":9,"linkType":54,"id":55},"ContentType","footer",{"name":57,"quickLinks":58,"socialLinks":75,"legalText":88},"Footer",[59,63,67,71],{"id":60,"key":61,"value":62},"dbd24c1c-5840-4132-af46-08b3762b393b","Home","/",{"id":64,"key":65,"value":66},"3b093617-4c9c-41b7-ab57-72a53a2cb400","Blog","/blog",{"id":68,"key":69,"value":70},"6d25b987-cc30-4b09-93f3-fd6d947c7ffc","Links","/links",{"id":72,"key":73,"value":74},"ceaccf06-ba0a-41d5-9202-56beaaa5f242","Projects","/projects",[76,80,84],{"id":77,"key":78,"value":79},"6ca24d29-3228-4215-8b8e-32ad04743b65","GitHub","https://github.com/jackdomleo7",{"id":81,"key":82,"value":83},"46719126-f516-4853-9444-e40cd0576918","CodePen","https://codepen.io/jackdomleo7",{"id":85,"key":86,"value":87},"c1581e8d-c729-4232-8944-0f767d94177d","LinkedIn","https://linkedin.com/in/jackdomleo7",{"data":89,"content":90,"nodeType":114},{},[91,100,107],{"data":92,"content":93,"nodeType":99},{},[94],{"data":95,"marks":96,"value":97,"nodeType":98},{},[],"©2018-2024","text","paragraph",{"data":101,"content":102,"nodeType":99},{},[103],{"data":104,"marks":105,"value":106,"nodeType":98},{},[],"All rights reserved.",{"data":108,"content":109,"nodeType":99},{},[110],{"data":111,"marks":112,"value":113,"nodeType":98},{},[],"Jack Domleo","document",{"sys":116,"total":19,"skip":36,"limit":19,"items":117,"includes":458},{"type":35},[118],{"metadata":119,"sys":122,"fields":134},{"tags":120,"concepts":121},[],[],{"space":123,"id":125,"type":46,"createdAt":126,"updatedAt":127,"environment":128,"revision":130,"contentType":131,"locale":20},{"sys":124},{"type":9,"linkType":10,"id":11},"5GKjEQKbXAneX7HsUv1qtm","2023-01-22T21:55:27.965Z","2023-01-24T08:10:50.331Z",{"sys":129},{"id":17,"type":9,"linkType":18},13,{"sys":132},{"type":9,"linkType":54,"id":133},"article",{"title":135,"slug":136,"image":137,"description":156,"publishDate":157,"tags":158,"body":160},"@media (hover: hover) - CSS Media Query","hover-css-media-query",{"metadata":138,"sys":140,"fields":147},{"tags":139},[],{"space":141,"id":143,"type":13,"createdAt":144,"updatedAt":144,"environment":145,"revision":19,"locale":20},{"sys":142},{"type":9,"linkType":10,"id":11},"1BWwf3Fg2A0y1RhcY7oNqq","2023-01-22T21:55:22.730Z",{"sys":146},{"id":17,"type":9,"linkType":18},{"title":148,"description":149,"file":150},"css=hover-media-query-og","CSS media query for hover",{"url":151,"details":152,"fileName":155,"contentType":32},"//images.ctfassets.net/l1wujzr3g1ab/1BWwf3Fg2A0y1RhcY7oNqq/0dadb7c242364de5ac4f5b63dd57f1b6/css_hover-media-query-og.png",{"size":153,"image":154},13019,{"width":29,"height":30},"css=hover-media-query-og.png","The hover CSS media feature can be used to test whether the user's primary input mechanism can hover over elements.","2020-07-06",[159],"CSS",{"nodeType":114,"data":161,"content":162},{},[163,194,221,237,244,252,260,267,274,285,292,308,319,326,333,356,367,382,389,429,433,440],{"nodeType":164,"data":165,"content":166},"blockquote",{},[167,174],{"nodeType":99,"data":168,"content":169},{},[170],{"nodeType":98,"value":171,"marks":172,"data":173},"The `hover` CSS media feature can be used to test whether the user's primary input mechanism can hover over elements.",[],{},{"nodeType":99,"data":175,"content":176},{},[177,181,190],{"nodeType":98,"value":178,"marks":179,"data":180},"- ",[],{},{"nodeType":182,"data":183,"content":185},"hyperlink",{"uri":184},"https://developer.mozilla.org/en-US/docs/Web/CSS/@media/hover",[186],{"nodeType":98,"value":187,"marks":188,"data":189},"MDN web docs",[],{},{"nodeType":98,"value":191,"marks":192,"data":193},"\r",[],{},{"nodeType":99,"data":195,"content":196},{},[197,201,207,211,217],{"nodeType":98,"value":198,"marks":199,"data":200},"Not to be confused with the ",[],{},{"nodeType":98,"value":202,"marks":203,"data":206},":hover",[204],{"type":205},"code",{},{"nodeType":98,"value":208,"marks":209,"data":210}," psuedo selector, this is a ",[],{},{"nodeType":98,"value":212,"marks":213,"data":216},"media query",[214],{"type":215},"bold",{},{"nodeType":98,"value":218,"marks":219,"data":220}," you may have never used or never considered using.\r",[],{},{"nodeType":99,"data":222,"content":223},{},[224,228,233],{"nodeType":98,"value":225,"marks":226,"data":227},"Let's look at an example and see how it could be improved using the ",[],{},{"nodeType":98,"value":229,"marks":230,"data":232},"hover",[231],{"type":205},{},{"nodeType":98,"value":234,"marks":235,"data":236}," media query.",[],{},{"nodeType":99,"data":238,"content":239},{},[240],{"nodeType":98,"value":241,"marks":242,"data":243},"Let's assume we're using this HTML for the below demonstration.\r",[],{},{"nodeType":99,"data":245,"content":246},{},[247],{"nodeType":98,"value":248,"marks":249,"data":251},"HTML\n\u003Cbutton class=\"button\">\n  Hover me\r\n  \u003Csvg>...\u003C/svg>\r\n\u003C/button>\r",[250],{"type":205},{},{"nodeType":253,"data":254,"content":255},"heading-2",{},[256],{"nodeType":98,"value":257,"marks":258,"data":259},"Showing an icon on hover\r",[],{},{"nodeType":99,"data":261,"content":262},{},[263],{"nodeType":98,"value":264,"marks":265,"data":266},"This is a typical feature request. It's not very detailed, but as front-end developers, it's enough for us to work with and create a prototype button at the least.\r",[],{},{"nodeType":99,"data":268,"content":269},{},[270],{"nodeType":98,"value":271,"marks":272,"data":273},"For this to work, we may jump to do something like this:\r",[],{},{"nodeType":99,"data":275,"content":276},{},[277,282],{"nodeType":98,"value":278,"marks":279,"data":281},"CSS\n.button {\r\n  background: darkorange;\r\n  color: white;\r\n  border: none;\r\n  padding: 1rem;\r\n  text-align: center;\r\n  position: relative;\r\n  cursor: pointer;\r\n}\n\r\n.button svg {\r\n  height: 2rem;\r\n  width: 2rem;\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 0.6rem;\r\n  fill: currentColor;\r\n  opacity: 0;\r\n}\n\r\n.button:hover {\r\n  padding-right: 3rem;\r\n}\n\r\n.button:hover svg {\r\n  opacity: 1;\r\n}",[280],{"type":205},{},{"nodeType":98,"value":191,"marks":283,"data":284},[],{},{"nodeType":99,"data":286,"content":287},{},[288],{"nodeType":98,"value":289,"marks":290,"data":291},"This would for sure show the icon when the button is hovered! 💪 But it doesn't work on my mobile... It doesn't know I'm hovering the button.\r",[],{},{"nodeType":99,"data":293,"content":294},{},[295,299,304],{"nodeType":98,"value":296,"marks":297,"data":298},"So, how do we cater for touchscreen devices that can't hover? A common solution would be to always display the icon on _mobile devices (take note of this, I will come back to it later)_ and add the hovering functionality for larger screens by using a ",[],{},{"nodeType":98,"value":300,"marks":301,"data":303},"min-width",[302],{"type":205},{},{"nodeType":98,"value":305,"marks":306,"data":307}," media query, typically these are screens that are 768px or wider:\r",[],{},{"nodeType":99,"data":309,"content":310},{},[311,316],{"nodeType":98,"value":312,"marks":313,"data":315},"CSS\n.button {\r\n  background: darkorange;\r\n  color: white;\r\n  border: none;\r\n  padding: 1rem;\r\n  padding-right: 3rem;\r\n  text-align: center;\r\n  position: relative;\r\n}\n\r\n.button svg {\r\n  height: 2rem;\r\n  width: 2rem;\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 0.6rem;\r\n  fill: currentColor;\r\n  opacity: 1;\r\n}\n\r\n@media (min-width: 768px) {\r\n  .button {\r\n    padding-right: 1rem;\r\n    cursor: pointer;\r\n  }\n\r\n  .button svg {\r\n    opacity: 0;\r\n  }\n\r\n  .button:hover {\r\n    padding-right: 3rem;\r\n  }\n\r\n  .button:hover svg {\r\n    opacity: 1;\r\n  }\r\n}",[314],{"type":205},{},{"nodeType":98,"value":191,"marks":317,"data":318},[],{},{"nodeType":99,"data":320,"content":321},{},[322],{"nodeType":98,"value":323,"marks":324,"data":325},"Great! We now have a button that always shows the icon on devices with a screen width less than 768px and will initially hide the icon on devices with a screen width of 768px wide or wider.\r",[],{},{"nodeType":99,"data":327,"content":328},{},[329],{"nodeType":98,"value":330,"marks":331,"data":332},"Chances are, this works for most cases and has been an acceptable solution for many years. However, we can't assume a device doesn't have a hover input mechanism just because of its screen width, and vice-versa.\r",[],{},{"nodeType":99,"data":334,"content":335},{},[336,340,344,348,352],{"nodeType":98,"value":337,"marks":338,"data":339},"This is where our `hover` media query comes in. Let's take a look at how we can refactor our ",[],{},{"nodeType":98,"value":300,"marks":341,"data":343},[342],{"type":205},{},{"nodeType":98,"value":345,"marks":346,"data":347}," to use ",[],{},{"nodeType":98,"value":229,"marks":349,"data":351},[350],{"type":205},{},{"nodeType":98,"value":353,"marks":354,"data":355}," instead.",[],{},{"nodeType":99,"data":357,"content":358},{},[359,364],{"nodeType":98,"value":360,"marks":361,"data":363},"CSS\n.button {\r\n  background: darkorange;\r\n  color: white;\r\n  border: none;\r\n  padding: 1rem;\r\n  padding-right: 3rem;\r\n  text-align: center;\r\n  position: relative;\r\n}\n\r\n.button svg {\r\n  height: 2rem;\r\n  width: 2rem;\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 0.6rem;\r\n  fill: currentColor;\r\n  opacity: 1;\r\n}\n\r\n@media (hover: hover) {\r\n  .button {\r\n    padding-right: 1rem;\r\n    cursor: pointer;\r\n  }\n\r\n  .button svg {\r\n    opacity: 0;\r\n  }\n\r\n  .button:hover {\r\n    padding-right: 3rem;\r\n  }\n\r\n  .button:hover svg {\r\n    opacity: 1;\r\n  }\r\n}",[362],{"type":205},{},{"nodeType":98,"value":191,"marks":365,"data":366},[],{},{"nodeType":99,"data":368,"content":369},{},[370,374,378],{"nodeType":98,"value":371,"marks":372,"data":373},"Outside any media query, we define our base styles that apply to everything. Inside our ",[],{},{"nodeType":98,"value":229,"marks":375,"data":377},[376],{"type":205},{},{"nodeType":98,"value":379,"marks":380,"data":381}," media query, we define styles specific to devices with a hover input mechanism.\r",[],{},{"nodeType":99,"data":383,"content":384},{},[385],{"nodeType":98,"value":386,"marks":387,"data":388},"Can you see how this is better than determining hover-specific styles based on screen size?\r",[],{},{"nodeType":99,"data":390,"content":391},{},[392,396,400,404,409,413,417,421,425],{"nodeType":98,"value":393,"marks":394,"data":395},"It's also a cleaner method because we define our ",[],{},{"nodeType":98,"value":229,"marks":397,"data":399},[398],{"type":215},{},{"nodeType":98,"value":401,"marks":402,"data":403}," styles in our ",[],{},{"nodeType":98,"value":229,"marks":405,"data":408},[406,407],{"type":215},{"type":205},{},{"nodeType":98,"value":410,"marks":411,"data":412}," media query, it's grouped them nicely for us. These ",[],{},{"nodeType":98,"value":229,"marks":414,"data":416},[415],{"type":205},{},{"nodeType":98,"value":418,"marks":419,"data":420}," styles would be harder to identify in the stylesheet if they were encapsulated in a ",[],{},{"nodeType":98,"value":300,"marks":422,"data":424},[423],{"type":205},{},{"nodeType":98,"value":426,"marks":427,"data":428}," media query.\r",[],{},{"nodeType":430,"data":431,"content":432},"hr",{},[],{"nodeType":99,"data":434,"content":435},{},[436],{"nodeType":98,"value":437,"marks":438,"data":439},"For a working example, I created a CodePen below (with a few extra CSS properties) that I hope will help 🙂.",[],{},{"nodeType":99,"data":441,"content":442},{},[443,447,455],{"nodeType":98,"value":444,"marks":445,"data":446},"\r\n",[],{},{"nodeType":182,"data":448,"content":450},{"uri":449},"https://codepen.io/jackdomleo7/embed/jOWZRXX",[451],{"nodeType":98,"value":452,"marks":453,"data":454},"CodePen: hover: hover media query",[],{},{"nodeType":98,"value":191,"marks":456,"data":457},[],{},{"Asset":459},[137],{"sys":461,"total":19,"skip":36,"limit":19,"items":462},{"type":35},[463],{"fields":464,"sys":475},{"articleDisclaimer":465},{"data":466,"content":467,"nodeType":114},{},[468],{"data":469,"content":470,"nodeType":99},{},[471],{"data":472,"marks":473,"value":474,"nodeType":98},{},[],"Disclaimer: All data and information are correct to the best of my knowledge at the time of writing.",{"id":476,"type":46},"3Viop9UQLlIrWglTQjk5Bd",{"sys":478,"total":479,"skip":36,"limit":480,"items":481,"includes":603},{"type":35},5,1000,[482,513,544,574],{"fields":483,"sys":511},{"title":484,"description":485,"image":486,"tags":507,"publishDate":509,"slug":510},"How to protect state in Pinia 🍍","Pinia, unlike Vuex, allows the state to be mutated directly, but sometimes we want to protect the state from being changed willy-nilly.",{"metadata":487,"sys":489,"fields":498},{"tags":488},[],{"space":490,"id":492,"type":13,"createdAt":493,"updatedAt":494,"environment":495,"revision":497,"locale":20},{"sys":491},{"type":9,"linkType":10,"id":11},"5iurYkErtwupD6LkJba4Jd","2024-03-23T20:34:09.782Z","2024-03-23T20:36:22.415Z",{"sys":496},{"id":17,"type":9,"linkType":18},2,{"title":499,"description":499,"file":500},"Pineapple",{"url":501,"details":502,"fileName":505,"contentType":506},"//images.ctfassets.net/l1wujzr3g1ab/5iurYkErtwupD6LkJba4Jd/eb717e6e4789957a33423f5f9fea4197/sumner-mahaffey-7vCt_lFxKx4-unsplash.jpg",{"size":503,"image":504},153411,{"width":29,"height":30},"sumner-mahaffey-7vCt_lFxKx4-unsplash.jpg","image/jpeg",[508],"Vue","2024-04-07","how-to-protect-state-in-pinia",{"id":512,"type":46},"7CUW25a1jLiar8pzd8K9Nh",{"fields":514,"sys":542},{"title":515,"description":516,"image":517,"tags":536,"publishDate":540,"slug":541},"When is a clickable div okay?","When it comes to accessibility, putting a click event on a div is taboo, but when is it okay to do so?",{"metadata":518,"sys":520,"fields":527},{"tags":519},[],{"space":521,"id":523,"type":13,"createdAt":524,"updatedAt":524,"environment":525,"revision":19,"locale":20},{"sys":522},{"type":9,"linkType":10,"id":11},"3nzHtHCAq4EKudWvrOOw4p","2023-07-11T21:23:08.036Z",{"sys":526},{"id":17,"type":9,"linkType":18},{"title":528,"description":529,"file":530},"When is a clickable div okay","An example modal element",{"url":531,"details":532,"fileName":535,"contentType":32},"//images.ctfassets.net/l1wujzr3g1ab/3nzHtHCAq4EKudWvrOOw4p/8bd8a51d97f431c933084f4413036eec/when-is-a-clickable-div-okay.png",{"size":533,"image":534},133997,{"width":29,"height":30},"when-is-a-clickable-div-okay.png",[537,538,539],"Accessibility","UX","HTML","2023-07-18","when-is-a-clickable-div-okay",{"id":543,"type":46},"brxitJC35PyChlVzusyLP",{"fields":545,"sys":572},{"title":546,"description":547,"image":548,"tags":567,"publishDate":570,"slug":571},"Should you clean out your blog?","If like me, you own a blog, you may ask yourself if it's ever a good idea to clean it out from time to time.",{"metadata":549,"sys":551,"fields":558},{"tags":550},[],{"space":552,"id":554,"type":13,"createdAt":555,"updatedAt":555,"environment":556,"revision":19,"locale":20},{"sys":553},{"type":9,"linkType":10,"id":11},"6Fk3J1WEn0YRhIGUawl63P","2023-02-15T20:26:31.807Z",{"sys":557},{"id":17,"type":9,"linkType":18},{"title":559,"description":560,"file":561},"clutter","A cluttered office desk",{"url":562,"details":563,"fileName":566,"contentType":506},"//images.ctfassets.net/l1wujzr3g1ab/6Fk3J1WEn0YRhIGUawl63P/a98a9a5ba72aef1afc04111bc7a9e5f9/clutter.jpg",{"size":564,"image":565},281805,{"width":29,"height":30},"clutter.jpg",[568,569,539],"Tips","Productivity","2023-02-16","should-you-clean-out-your-blog",{"id":573,"type":46},"9dijdAHS9ROnOwXit47NQ",{"fields":575,"sys":601},{"title":576,"description":577,"image":578,"tags":597,"publishDate":599,"slug":600},"Learning Neumorphic Design","The awesome design trend that never took off! What are the fundamentals to neumorphic design?",{"metadata":579,"sys":581,"fields":588},{"tags":580},[],{"space":582,"id":584,"type":13,"createdAt":585,"updatedAt":585,"environment":586,"revision":19,"locale":20},{"sys":583},{"type":9,"linkType":10,"id":11},"T6RRM5TpnSzYm6UQolMMf","2023-01-24T20:35:16.287Z",{"sys":587},{"id":17,"type":9,"linkType":18},{"title":589,"description":590,"file":591},"neumorphic-design-og","A music player UI with a neumorphism design",{"url":592,"details":593,"fileName":596,"contentType":32},"//images.ctfassets.net/l1wujzr3g1ab/T6RRM5TpnSzYm6UQolMMf/a51b32aea0faa8885d8e525c436b5073/neumorphic-design-og.png",{"size":594,"image":595},6959,{"width":29,"height":30},"neumorphic-design-og.png",[598,159],"Design","2020-05-27","learning-neumorphic-design",{"id":602,"type":46},"2KWdODn6oaRYNzG4Qz4yd3",{"Asset":604},[605,517,486,548,578],{"metadata":606,"sys":608,"fields":613},{"tags":607},[],{"space":609,"id":143,"type":13,"createdAt":144,"updatedAt":144,"environment":611,"revision":19,"locale":20},{"sys":610},{"type":9,"linkType":10,"id":11},{"sys":612},{"id":17,"type":9,"linkType":18},{"title":148,"description":149,"file":614},{"url":151,"details":615,"fileName":155,"contentType":32},{"size":153,"image":616},{"width":29,"height":30},1729040763128]