<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Jack Domleo - blog</title>
        <link>https://jackdomleo.dev/feed.xml</link>
        <description>Feed for Jack Domleo's blog.</description>
        <lastBuildDate>Sun, 02 Oct 2022 01:42:03 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/nuxt-community/feed-module</generator>
        <item>
            <title><![CDATA[My New Setup for 2022]]></title>
            <link>https://jackdomleo.dev/blog/2022/my-new-setup</link>
            <guid>https://jackdomleo.dev/blog/2022/my-new-setup</guid>
            <pubDate>Tue, 12 Jul 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Having a neat setup can often really help with productivity, morale and health problems.]]></description>
            <content:encoded><![CDATA[
Having a neat setup can often really help with productivity, morale and health problems.

Recently, I decided that my desk setup just wasn't cutting it for me. My desk wasn't neat, I ached in places such as my back, legs and forearms, and I just wasn't happy with my equipment.

## The old desk

Last year (<time datetime="2021-06">June 2021</time>), I properly upgraded my desk for the first time. This included purchasing dual monitor arms, a docking station, a wireless vertical ergonomic mouse, an ergonomic keyboard, an orange leather desk mat, a ring light, and a microphone with an arm.

<blockquote class="twitter-tweet"><p lang="en" dir="ltr">Decided to upgrade my desk &amp; equipment.<br><br>There&#39;s a lot more space than there used to be thanks to the monitor arms. <a href="https://t.co/IqZRMld8IO">pic.twitter.com/IqZRMld8IO</a></p>&mdash; Jack Domleo (@jackdomleo7) <a href="https://twitter.com/jackdomleo7/status/1408130225595207680?ref_src=twsrc%5Etfw">June 24, 2021</a></blockquote>

At the time, these were beneficial upgrades, or at least most of them were. The dual monitor arms created more space on the desk and allowed the monitors to be more easily adjustable - if I wanted to rotate a monitor to be portrait, then I could easily do so.

The docking station was a tidy way to keep my cables centralised and allowed me to easily dock and undock my laptop if I ever needed to move it elsewhere.

However, in all honesty, I just didn't get on with some of the equipment I had purchased...

I purchased the ring light and microphone because I originally intended I'd be creating more video content, but that never happened and they just ended up being in the way.

The wireless vertical ergonomic mouse is overrated in my opinion. Maybe I just purchased a poor mouse and shouldn't reflect all vertical mice, but my hands struggled to grip the mouse and the mouse would often topple over.

I had high hopes for the ergonomic keyboard with the way the keys are split down the middle and rotated to reflect natural wrist positioning. For about 12 months, I really struggled to get used to this keyboard layout, and the keyboard was too big and clunky and took up a lot of room on my desk. The bottom of the keyboard made it awkward for me to use a wrist support because of the curvature of the keyboard and the large built-in wrist rest, that you can't really call a wrist rest because it's not comfortable.

The desk mat was good for protecting the actual desk, but it was too small as it didn't cover most of the desk, the mouse struggled to glide along it, and it was really difficult to clean. The orange also felt too bright at times.

After 12 months of not being particularly happy with my desk, and having some time and money to invest into it, I decided to replace a few items.

## New setup for 2022

<blockquote class="twitter-tweet"><p lang="en" dir="ltr">Decided to upgrade my new desk slightly.<br><br>Compared to how I used to have it, this definitely feels more clean and modern, and is a desk I&#39;m happy with!<br><br>I especially love the white keyboard and new style of wrist support! <a href="https://t.co/r5LAoZeMHc">pic.twitter.com/r5LAoZeMHc</a></p>&mdash; Jack Domleo (@jackdomleo7) <a href="https://twitter.com/jackdomleo7/status/1544768907122196480?ref_src=twsrc%5Etfw">July 6, 2022</a></blockquote>

Firstly, you'll notice the orange mat has gone! Despite orange being my favourite colour, the bright orange mat wasn't doing me any favours. I replaced this with a large black smooth fabric mat. Already I feel this alone makes my desk more clean, modern and mature, and I love how easily the mouse glides across it.

I replaced the so-called "ergonomic keyboard" with a keyboard I used to use - a black Microsoft wired keyboard 600 - that I absolutely loved using, but I was getting bored of using a black keyboard and didn't think it would look as good against my new black desk mat... so I purchased the exact same keyboard, but in white! The fact that it is a wired keyboard doesn't bother me because unlike a mouse, I'm not constantly (or ever) moving my keyboard around, so the wire for the keyboard never gets in the way.

<blockquote class="twitter-tweet"><p lang="en" dir="ltr">I&#39;ve loved this keyboard so much over the last 4 years, I decided to also buy it in white üòÅ<br><br>The white looks so much better in my opinion! Plus it&#39;s nice to have a little change. <a href="https://t.co/oTRTZVoNgH">pic.twitter.com/oTRTZVoNgH</a></p>&mdash; Jack Domleo (@jackdomleo7) <a href="https://twitter.com/jackdomleo7/status/1544285736861663232?ref_src=twsrc%5Etfw">July 5, 2022</a></blockquote>

I was window shopping for mice for a while because, in my head, I knew what I wanted, but I just couldn't find it and didn't want to make the same mistake with the mouse I currently had. After some Amazon surfing, I opted for the simple Amazon Basics Compact Ergonomic Wireless Mouse. It's not vertical but that's ok, I still find it extremely easy to grip and use and it's really comfortable. If you have small hands, like myself, I really recommend trialling a compact-sized mouse, rather than a full-sized mouse if you're struggling to grip it properly.

You may also notice there is a large grey cushioned mat in my new setup. This is actually a wrist/elbow support. I've tried so many wrist supports in the past but none ever seem to actually be comfortable, and they always used to move around a lot and never stay in the same place. This was a random find on Amazon and I instantly knew that this new style wrist support was going to be so much more comfortable and it certainly is! It takes up some room but it's just enough room to rest your forearms on nicely with a comfortable distance to the keyboard.

Amongst all that, I did some general tidying up. I put the microphone and ring light away in a drawer so I can pull them out if I ever need them. And I purchased a vertical laptop stand to store my laptop neatly out the way and this position allows the laptop to be well ventilated.

<div class="amazon-product-row">
  <iframe sandbox="allow-popups allow-scripts allow-modals allow-forms allow-same-origin" style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//ws-eu.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&OneJS=1&Operation=GetAdHtml&MarketPlace=GB&source=ss&ref=as_ss_li_til&ad_type=product_link&tracking_id=jackdomleo707-21&marketplace=amazon&region=GB&placement=B07XVG51JY&asins=B07XVG51JY&linkId=2375da17f69c7fd8d2d831c888d943ac&show_border=true&link_opens_in_new_window=true"></iframe>
  <iframe sandbox="allow-popups allow-scripts allow-modals allow-forms allow-same-origin" style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//ws-eu.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&OneJS=1&Operation=GetAdHtml&MarketPlace=GB&source=ss&ref=as_ss_li_til&ad_type=product_link&tracking_id=jackdomleo707-21&marketplace=amazon&region=GB&placement=B078F698CQ&asins=B078F698CQ&linkId=3c055c83ba19dbd18d87dd33a9142ccb&show_border=true&link_opens_in_new_window=true"></iframe>
  <iframe sandbox="allow-popups allow-scripts allow-modals allow-forms allow-same-origin" style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//ws-eu.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&OneJS=1&Operation=GetAdHtml&MarketPlace=GB&source=ss&ref=as_ss_li_til&ad_type=product_link&tracking_id=jackdomleo707-21&marketplace=amazon&region=GB&placement=B001QSZ8IE&asins=B001QSZ8IE&linkId=ee64d6dc6d6dde773dfef0a42d5afd2a&show_border=true&link_opens_in_new_window=true"></iframe>
  <iframe sandbox="allow-popups allow-scripts allow-modals allow-forms allow-same-origin" style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//ws-eu.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&OneJS=1&Operation=GetAdHtml&MarketPlace=GB&source=ss&ref=as_ss_li_til&ad_type=product_link&tracking_id=jackdomleo707-21&marketplace=amazon&region=GB&placement=B07RYP8LS1&asins=B07RYP8LS1&linkId=71c02c20604fe81d17582b660776a469&show_border=true&link_opens_in_new_window=true"></iframe>
  <iframe sandbox="allow-popups allow-scripts allow-modals allow-forms allow-same-origin" style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//ws-eu.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&OneJS=1&Operation=GetAdHtml&MarketPlace=GB&source=ss&ref=as_ss_li_til&ad_type=product_link&tracking_id=jackdomleo707-21&marketplace=amazon&region=GB&placement=B089W6Y1BD&asins=B089W6Y1BD&linkId=eb36ac6ddea4dd61dac32ba64259b5f0&show_border=true&link_opens_in_new_window=true"></iframe>
</div>

## So what?

Whilst this doesn't seem like much, it has made my workday so much better and much more comfortable. The wrist support encourages me to type in a comfortable position and stop resting my forearms on the edge of the desk. I feel the aesthetics to the desk are more modern and I'm loving the contrast of the white keyboard against the black mat.

My next steps are to replace my office chair for one that supports my lower back more, and one I can sit in properly - I often slip down in my current chair because of, I suspect, my small figure. I'll also be looking at replacing my physical desk with one that adjusts for seated and standing positions.

It's important to invest a little time and money into your desk setup. I sit at my desk 7.5 hours a day, 5 days a week, so I want to love my workspace and feel comfortable in it. Check with your company to see if they will help finance any equipment for you that you may need. I opted to purchase my equipment with my own money so I can own it forever, and so I can choose the exact brands and colours I want (most companies will often buy a standard brand, design and colour, or grab whatever is in their store cupboards).

I'm no expert at tidying cables behind the desk but I often try and keep these as tidy as I can, at least so my feet don't accidentally pull on the cables and pull the monitors with it.

I see so many different setups online: gamers setups, setups on the beach, expensive setups, cheap setups, standing setups, etc. The most important thing is to make sure that you are happy with it and can work comfortably in it.

You see a complete up-to-date list of everything I use by [visiting my uses page](/uses).

Show me your setup!]]></content:encoded>
            <author>jackdomleo7@gmail.com (Jack Domleo)</author>
        </item>
        <item>
            <title><![CDATA[Software Developer Job Hunting is Not Simple]]></title>
            <link>https://jackdomleo.dev/blog/2022/software-developer-job-hunting-is-not-simple</link>
            <guid>https://jackdomleo.dev/blog/2022/software-developer-job-hunting-is-not-simple</guid>
            <pubDate>Thu, 09 Jun 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Looking for a software developer job can be unnecessarily not simple]]></description>
            <content:encoded><![CDATA[
**DISCLAIMER**: This article mostly depicts my own experience when searching for frontend developer roles in the UK. Not everyone has experienced or will experience the same as me and may have differing opinions.

Recently, I accepted a new role and wanted to talk you through my experience over the past 4 years (ish) of looking for new jobs (I haven't been looking for 4 years, but I've have looked for roles on 4 separate occasions during). This will be my fourth software developer role.

When it's time to start looking for a new role, there's a couple of inconveniences that make the process of job hunting a draining, confusing and not-so-simple task.

1. Recruiters
2. Job adverts are too similar
3. Job adverts are too vague
4. Salary
5. Too much choice

## 1. Recruiters

There are very mixed opinions on recruiters and I can see why.

Like with any profession, there are the good ones and there are the bad ones. If, like me on my most recent new role, you decided to go through a recruitment agency, you will notice that there are recruiters who genuinely want what's best for you and really put you at the centre when finding roles... then there are those who just don't. I've dealt with recruiters who think they know what's best for me and don't listen to what I'm looking for and these recruiters can really make finding a new job really draining, and if you let them have their way, they will push you into the first role they "match" you with and there's a very good chance you won't enjoy your new role. If you decide to go with a few recruiters for your next role, be sure to work with those that will listen to what you want and not what they want. Sometimes it's really obvious those recruiters who are only in it for the commission, but sometimes it's only obvious later down the line as you work with them more.

I went through a recruitment agency on my latest role because I felt like I had lost touch with the software developer market and was seeking advice from people who are looking at the software developer market everyday. But recruitment agencies aren't for everyone and some people prefer applying to companies directly. There can sometimes be more manual work when cutting out the middleman, but it can often pay off, and it's often about making that decision about what you feel is best for you at the time. This isn't always a simple decision. Ultimately, I made the decision to go through recruiters because I felt they could also keep me up-to-date with the current market.

## 2. Job adverts are too similar

Job adverts are like CVs/resumes and sometimes I feel hiring managers forget this. If you were presented with 30 CVs/resumes that all sounded extremely similar, how do you know which applicant to proceed with? Sometimes it feels this way with job adverts too where they are all just the same and nothing really stands out between them. I've read too many job adverts that are looking for "a passionate frontend developer with innovative thinking, proficient in HTML, CSS, JavaScript & Vue/React, looking to join an agile, fast-paced environment". Often I feel like the company isn't really trying to sell the job to me because every job advert pretty much says the same thing.

The day-to-day activities are often the same, the benefits are very similar, the company cultures are too alike, yet in the interview they expect you to tell them why you want to work for them. How are you supposed to truthfully answer that if there is very little that makes them stand out? Obviously, you should do research into a company before you apply, but if you based the role off what they've advertised in the job advert, is there really anything that makes you want to apply for this role at this company over others? Don't get me wrong, sometimes you do get job adverts that are structured well and don't sound like the monotone clich√© job advert, and trust me, those are the roles that do well.

## 3. Job adverts are too vague

How many times have you come across a job advert that describes the company and the role, but doesn't actually describe the company or the role? They use buzz words to hide the true culture of the company and the true nature of the role. Below is a list of buzz words/phrases that I found on the internet and what they actually mean:

<div class="table-wrapper">

| Words/Phrases in the job advert       | What they actually mean                                        |
|---------------------------------------|----------------------------------------------------------------|
| work on cutting edge technology       | _Do what everyone else is doing_                               |
| a fast-paced environment              | _Your job will be constant firefighting_                       |
| must be a team player                 | _Must not question authority_                                  |
| able to work with minimal supervision | _You'll be the one we blame when something goes wrong_         |
| an Agile team                         | _We have daily stand-ups_                                      |
| a market leader                       | _Recently started making a profit_                             |
| rockstar developer                    | _You will work very long hours with impossible deadlines_      |
| we have an urgent need                | _Our other rockstar just left and no one understands the code_ |
| dynamic environment                   | _Our leadership keeps changing priorities_                     |
| self-starter                          | _We have no process_                                           |
| passionate                            | _Perseveres through regular death marches_                     |

</div>

That original table was only intended as a joke, but it's scary how true it is. Another phrase I feel we should add to this list is "disrupting the industry".

<blockquote class="twitter-tweet"><p lang="en" dir="ltr">What do you think when you see the phrase, &quot;disrupting the industry&quot; in job adverts? ü§î</p>&mdash; Jack Domleo (@jackdomleo7) <a href="https://twitter.com/jackdomleo7/status/1527967963692908545?ref_src=twsrc%5Etfw">May 21, 2022</a></blockquote>

So many job adverts are filled with words and phrases that companies think candidates want to hear, but all we want is an honest and simple description of the company and the role. If the team hasn't quite got comfortable with Agile, that's fine, be honest with the candidates. Are you a "market-leader in digital systems that assist companies fairly compensate hard-working employees with monetary value", or have you created a payroll system that happens to be very popular? Keep it simple! Why do they make job adverts so unnecessarily complex?

## 4. Salary

Salary can definitely make the job hunting process painful.

We all have come across a job advert with no salary range whatsoever. These are mostly hated by candidates because they want to know upfront what salary range they're applying for and if a job advert is missing a salary range, it can certainly put many applicants off. In the past, I have applied for a fair few roles with a missing salary because I wanted to see how they went and I got very mixed results... One asked for my current salary, one didn't ask my current salary but asked for my salary expectations, and were surprised when I asked for a figure so low (it's fair to say I wasn't up to date on the market or my worth) but offered me my asking salary anyway, and one didn't ask for my current salary, didn't ask for my expectations, and just straight up offered a salary, which was reasonably fair. My opinion, if a job advert has no salary range, and the role sounds like it could be for you, still consider applying for it and see how the process goes, it could be good practise. They may even think you are worth more than you think you are and offer you a higher salary than you initially thought you'd get.

Recently I was looking for frontend developer roles and was comparing salaries. The most confusing thing was frontend developer salaries ranged from ¬£22k to ¬£90k. For those unfamiliar with the Great British Pound (¬£GBP) and its worth, these salaries range from not a lot, to mega money. So looking for market comparison to try and work out my worth was difficult. I read a few of these job adverts and job adverts for ¬£22k sounded extremely similar to roles for ¬£90k - I assumed a lot of the ¬£90k roles were missing key responsibilities that make the role worth so much money.

With the help of speaking to a few recruiters and reading [talent.io's 2022 European Tech Salary Report](https://bit.ly/3loK5LI), I was able to find a salary range that I felt fit my worth and very shortly I was applying for roles in that range and was very quickly offered 3 frontend developer roles within that range. I wasn't aware I was worth 50% more than my current salary. It's always important to know your worth!

During the <time datetime="2020">2020</time> COVID pandemic, software developer salaries took a huge hit, but they bounced back in <time datetime="2021">2021</time> and even further in <time datetime="2022">2022</time> with some roles having the potential to earn up to 50% more than before COVID.

For those who don‚Äôt know about talent.io, they‚Äôre actually a selective tech recruitment platform with a community of +100,000 qualified tech professionals and 7,000 companies in Europe. They support both permanent and freelance jobs, on-site and remote, and have already helped more than 6,000 candidates find the job they deserve. Here‚Äôs out it works: 
- **Set your standards**: define your next ideal position by setting your desired role, tech stack, salary, and industry. 
- **Have companies apply to you**: hiring managers pitch you their position, mission, and team as well as a proposed salary range. You decide who you want to start discussing with. 
- **Choose the position you love best**: it takes 20 days on average to get hired on talent.io.

<figure>
  <a href="https://bit.ly/3loK5LI" target="_blank">
    <nuxt-img height="429" width="672" src="/blog/2022/software-developer-job-hunting-is-not-simple/talent-club-tech-salary-report-2022.png" alt="talent.io European Tech Salary Report 2022 edition">
  </a>
  <figcaption>
    <btn href="https://bit.ly/3loK5LI">
      <span>Download <span class="sr-only">talent.io's <time datetime="2022">2022</time> European Tech Salary Report</span> now</span></btn>
  </figcaption>
</figure>

## 5. Too much choice

Software developers are in high demand, especially in the UK, which means there is a lot of roles out there. Have you ever been to a restaurant and been presented with too much choice that it's too hard to make a decision? Well, it can feel like that when searching for developer roles.

Especially, since the <time datetime="2020">2020</time> COVID pandemic, demand for developers has become even higher with many new startups on the rise.

There could be up to 30 amazing roles that you feel you're a perfect fit for. You can't apply to all 30, can you? Surely, you'd forget what companies you've applied for and get yourself in a pickle - I've made a fool of myself in the past when applying for too many roles because I forgot which role was what and eneded up attending interviews having done research on the wrong company and the wrong role. There's an unspoken rule about applying up to 5 roles at a time, so how do you choose 5 from those 30 when they all sound amazing, and they all sound the exact same?! The way I get around this is I make myself more fussy about the next role I want. I.e. this time round I was looking for a hybrid role as opposed to remote roles, so was looking for somewhere a little closer to home, which ultimately narrowed down the number of roles available to me to make it an easier decision.

What about job offers rather than job applications? What if you're offered 3 roles at once. How do you possibly choose? Let's face it, 3 offers at the same time is quite remarkable and a lot of choice to choose from. But still, you'll always be wondering whether you made the right decision after being presented with so much choice.

## Summary

We developers are lucky in the sense that it can be a lot easier than other industries to find roles and move roles, but it does come with its difficulties. Below is a short list of rules I try my best to stick to when looking for new roles:

- Get initial insight about the current market
  - By researching salary reports such as [talent.io's 2022 European Tech Salary Report](https://bit.ly/3loK5LI)
  - By speaking with recruiters who specialise in your area
- Do some initial research about what exactly it is you want in your next role (remember, you want to progress your career, not necessarily just move roles)
- If you do go through a recruitment agency, be sure to work with recruiters who give you a friendly vibe, you feel you can trust and who listen to your needs
- Know your worth! This is something many people struggle with but honestly, software development is a valuable profession and most developers undervalue themselves because they don't know the market, don't know their worth or don't have the confidence to increase their salary
- Don't apply to applications straight away, surf through job adverts and get a feel for what the market is looking for, then filter out the adverts that stand out to you
- Try and do as much valuable research into the company(s) as you can - don't focus on the unimportant details about the business, focus on what you may need for the interview and focus on the details that would help you decide whether the company is a right fit for you or not
- Know what you're looking for - if you know what you want, stick to it, but don't be too specific, still leave some wiggle room
- Know what red flags to look out for in job adverts such as buzz words that describe the role and the company without actually describing the role or the company
- Don't beg, instead show your worth - you must show what value you can add

What difficulties do you have or have you had when applying for software developer roles?
]]></content:encoded>
            <author>jackdomleo7@gmail.com (Jack Domleo)</author>
        </item>
        <item>
            <title><![CDATA[I wrote an ebook, here is what I learned]]></title>
            <link>https://jackdomleo.dev/blog/2020/i-wrote-an-ebook-here-is-what-i-learned</link>
            <guid>https://jackdomleo.dev/blog/2020/i-wrote-an-ebook-here-is-what-i-learned</guid>
            <pubDate>Mon, 09 Nov 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[I wrote an ebook. It was something different to coding all the time and I want to share my experience, successes and challenges.]]></description>
            <content:encoded><![CDATA[
During summer <time datetime="2020">2020</time>, I began writing an ebook. It was an exciting experience, but I hit some challenges along the way, and I learned a lot during the research, writing, promoting and selling of the ebook that I'd like to share with you. If you're thinking of writing your own ebook someday, then I hope this article and my experience will help you during the process of writing your book.

## Why did I write an ebook?

During summer <time datetime="2020">2020</time>, I was made furloughed on the UK Job Retention Scheme during the Coronavirus pandemic - basically, I had about 4 months of free time with no work, but I was still being paid a salary. I utilised this time focusing on my development skills by learning new tools, languages, and programming and design concepts. I could feel myself approaching a burnout because I was doing something developer-related almost all day, every day. It's fair to say I was getting a little bored of coding at that time and I just needed something else to do. Since I've always wanted to write an ebook at some point in my career, I felt now (summer <time datetime="2020">2020</time>) would be a perfect time to start, and would be a nice break from constant coding.

At such a young age, I've felt for a long time that I've achieved so much in so little time and have made some really good choices with my career that I feel were the best choices for me. I have no degree (only my school education), never completed my apprenticeship due to redundancy and have faced the 'age' issue for quite a while. Don't worry, I wasn't made redundant for any other reason than the company I was employed at as an apprentice went bankrupt. From what I've gained in such little time and the knowledge I do know about levelling up careers, I decided to base the topic of my ebook on this - this ebook has become very popular primarily amongst new/junior developers. I found a gap in the market for a developer book with the theme of focusing on your career and how you can improve it from a wider view by making small improvements to many small areas of your career.

But this article is not about me, my education or my career - the focus of this article is the process during the writing, promoting and selling of my first ebook. However, if you are interested in my journey into development, consider reading my article, <nuxt-link to="/blog/2020/how-i-went-from-a-retail-assistant-at-17-to-landing-a-developer-role-at-19">How I went from a Retail Assistant at 17 to Landing a Developer Role at 19</nuxt-link>.

Becoming a published author can be a lengthy process and often a lot of work - you have to find a company to publish you, you have to write the book, you have to refine the book, they have to review the book, then you have to wait for them to print the book and do the promoting on your behalf. Then ultimately, you could end up only half owning the book you wrote. This wasn't going to work for me - I wanted to self-publish, completely own my book and do the promoting myself.

I decided to do an ebook for many reasons over a printed book. Firstly, printed books cost a lot of money for the raw materials and the printing process, which is the kind of money I don't have, whereas the cost for making a single ebook costs nothing (if you exclude writing hours). This ties in really well with being green and looking after the environment by not using a lot of paper and ink. Ebooks are ever-growing extremely popular since a lot of people love reading books on their mobile phones and/or tablet devices from anywhere, whereas with a book you might forget to take it with you. With websites such as [Gumroad](https://gumroad.com/jackdomleo7), it's really easy to write and self-publish an ebook, giving you the freedom to manage the earnings, promotions and everything else. I like seeing Gumroad as a great application for content creators looking to create and sell their own content. The last real benefit from only making an ebook rather than a physical book is the fact that you can update and iterate over the book, so the first release is never the finished product.

## Writer's Block

Writer's block is a condition in which a writer temporarily loses the ability to produce new work or experiences a creative slowdown. This loss of ability to write and produce new work is not a result of commitment problems or the lack of writing skills.

I experienced writer's block many times while writing the ebook. I knew what I wanted to write about, I just didn't know exactly what to say. When you have a really good idea, then forget it and you're frustrated that you forgot it, writer's block is just like that.

You never really overcome writer's block, and it doesn't happen all the time, but I have found a few techniques that help me minimise how often I experience writer's block.

I planned each section in [Notion](https://www.notion.so) and I didn't start writing that section until my Notion note had enough points in it, that made me feel I could write enough. I would make notes on phrases, diagrams, anecdotes, quotes, websites etc. I also love a cloud-based application, like Notion, because if I ever have a really good idea while I'm out somewhere (or not near my computer), I can also update the Notion note on my mobile phone.

I would often draft out paragraphs beforehand in Notion, or highlight existing paragraphs in the book that I want to revisit.

## Imposter Syndrome

Imposter syndrome was real. Who am I to write a book on career development? But someone told me that the people I can help the most are those just behind me in their career path, junior developers. The book I am writing will be very valuable to those starting in a tech/development career. I may not be an expert in a specific programming language and I may not have 25 years experience under my belt, but I do have the right experience and advice to share with those who are where I was a little over 2 years ago.

My imposter syndrome towards being a self-published author only grew larger and larger as more pre-orders came in and as I approached release day. But I kept reminding myself that someone will at least find this helpful and that's what matters.

## Challenges

I encountered a few challenges during the writing of my ebook relating to legality issues and pricing. Most issues I was able to overcome, but the fact that I was able to identify them is a really good start.

### Legal

I have a chapter on productivity techniques that I found helpful and maybe others may also find helpful, but there are specific techniques that have been trademarked and/or copyrighted - therefore, after reading the copyright guidelines, it is illegal for me to mention the name of some of those techniques in my book, purely based on the fact I was going to sell my book to make money. No matter if I highlighted and clearly stated that the technique idea is owned by someone else or another organisation, it is still illegal for me to mention the name.

This occurred multiple times throughout the book. I didn't want to remove them at first because they added so much value to the book, but for my sake, it's better to be safe than sorry. I checked the copyright for everything referenced in my book to make sure that my book was legally clean.

### Price

Some people can create content and set a really high price because they know people will pay for it, some of us cannot do that. This is my first content I've created, so I didn't feel I'd earned the trust yet, or proven myself to be worth paying for my product. Setting a price that was not only affordable and inexpensive, but also compensated for the extensive amount of time I spent on the book was tricky. Setting it too low wouldn't compensate me enough and would give the impression that the quality isn't very good since it's cheap, and setting it too high would be out of the question because less people would be able to afford it and I haven't proven that my content is worth it yet.

I finally settled on $10+. Gumroad has a 'pay what you want' feature, so I enabled it and set a minimum price of $10 so if someone was feeling generous, they could pay more if they wanted to. Pricing this way has worked out great so far with many people buying at $10 pleased with how affordable it is, and some people paying $15 and even as much as $20.

### Writing

I'm not particularly the best writer, but I feel I'm good enough. With a good grammar tool and a thesaurus on-hand, I felt like I could string together a really professional sounding sentence.

### Hippocritical

There were certainly some instances when writing the ebook where I felt a bit hippocritical - where I felt I could take a leaf out of my own book. This feeling is to be expected though because as I learn and write more, I'm going to encounter new things that I'm going to share and advise but I don't actually do myself yet. But this does not mean that I'm not in a position to not share what I've just learned.

### Opinions

I asked specific people to proofread my book if they had the chance, and in return they'd get a free copy. They all did a fantastic job in helping quality assure the book and I am extremely grateful for their help.

An issue that only sometimes arose was that some of them didn't agree with the advice I was giving out. I would think long and hard but I came to the conclusion that it's ok if they don't agree because not everyone has to agree on everything. I would simply thank them for their opinion and expressing it with me.

Ensuring to make this book authentic and sound like me, it was important to write about topics and tips that I truly believed in, and you should too.

## So, what did I write?

I am now a self-published author of an ebook called [Level-Up Your Career Today: Developer Edition](https://levelupyourcareer.today) and I could not be more proud.

I had so much fun writing the ebook and I was able to learn so much myself while researching what to write about. I hope you enjoy the book and find it useful.

Hopefully, this article has been helpful to you if you ever decide to write an ebook. If you do decide, then I wish you the best of luck.

[![Level-Up Your Career Today: Developer Edition ebook front cover](/blog/2020/i-wrote-an-ebook-here-is-what-i-learned/levelupyourcareertoday.png)](https://levelupyourcareer.today)]]></content:encoded>
            <author>jackdomleo7@gmail.com (Jack Domleo)</author>
        </item>
        <item>
            <title><![CDATA[Why the term 'T-shaped' is better than the term 'full-stack'.]]></title>
            <link>https://jackdomleo.dev/blog/2020/why-the-term-t-shaped-is-better-than-the-term-full-stack</link>
            <guid>https://jackdomleo.dev/blog/2020/why-the-term-t-shaped-is-better-than-the-term-full-stack</guid>
            <pubDate>Tue, 11 Aug 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[I am of the opinion that the term 'full-stack' is too often misunderstood and is in need of a replacement.]]></description>
            <content:encoded><![CDATA[
The term 'full-stack':
- What is it?
- What does it mean?
- Why is it a problematic term?

## Disclaimer

This article focuses on the problems faced with the **term** 'full-stack', rather than the developers themselves.

## What is full-stack?

Full-stack relates to a developer who's expertise **touch** on the entire stack of an application - whether this is front-end, backend, pipeline or automation testing. However, they are not entire experts in any field, although they may have a preference for which area they enjoy the most.

_Full-stack Developer_ is a title **a lot** of developers aspire to be, but not me.

## Why is 'full-stack' problematic?

To an extortionate number of hiring managers and recruiters, a full-stack developer is someone who is magical. They are experts on the backend, experts on the front-end, experts on the pipeline and experts on automation testing, and cost the same as any other developer. So essentially, in their mind, they get 4 developers in one, for the price of one.

This sounds ridiculous, right? But this is what the term 'full-stack' is often misinterpreted as. In my opinion, it can be quite toxic in terms of, developers who are specifically front-end, backend, pipeline and/or automation testers are put at a disadvantage when compared to this misinterpreted term of a 'full-stack' developer.

If you have an application that needs UI, UX and accessibility to be of the best quality, ideally you would get a front-end developer to do it. Similar on the backend, (forgive my lack of understanding on the backend) if you need someone to do some really good database normalisation or to create some really clean API endpoints, you would ideally get a backend developer to do it.

This is not to say full-stack developers can't do those tasks... Full-stack developers are not _necessarily_ experts in that field, they just have decent knowledge and understanding to be able to call themselves backend.

<figure>
  <img src="/blog/2020/why-the-term-t-shaped-is-better-than-the-term-full-stack/full-stack.png" alt="A diagram representing how a full-stack developer role overlaps other developer roles but are not experts in those areas.">
</figure>

The above diagram is not an accurate representation of my view on a full-stack developer, because ultimately every developer is unique, therefore the central circle could be shifted towards either end and/or it could be morphed/squished, etc. But the diagram shows a clear representation of the difference between a full-stack developer and developers who are specialists in their specific fields.

## What is better than 'full-stack'?

Lots of developers aspire to be full-stack, but I don't. I aspire to be a T-Shaped Developer. The name isn't as catchy but it has a more realistic meaning than 'full-stack'.

Think of a 'T' - it has a long vertical line acting as a body and a shorter horizontal line acting as a hat.

The long vertical line acting as a body is your area of expertise - the area you are most skilled at and enjoy the most. For me, this would be front-end development.

The shorter horizontal line acting as a hat is areas you know, but not as well - the areas you have touched on and have a decent understanding on, but may not necessarily know fully like an expert would. For me, my hat is fairly small because I am working towards learning some more backend and automaton.

Again, this is not a fully accurate representation since every developer is different and unique, but I definitely feel 'T-shaped' is a more realistic term than 'full-stack'.

You can consider the horizontal line to be your wide breadth of knowledge and the vertical line to be your depth in knowledge.

Below is a representation of what I feel my own T-shaped knowledge may look like. My main area is front-end and front-end technologies but I have also touched on areas such as C#, Selenium and automation.

<figure>
  <img src="/blog/2020/why-the-term-t-shaped-is-better-than-the-term-full-stack/t-shaped.png" alt="A diagram representing how I think my own T-shaped diagram looks like.">
</figure>

I also really like this tweet by [@TheAnkurTyagi](https://twitter.com/TheAnkurTyagi):

<blockquote class="twitter-tweet"><p lang="en" dir="ltr"><a href="https://twitter.com/hashtag/CodeNewbies?src=hash&amp;ref_src=twsrc%5Etfw">#CodeNewbies</a> Have you heard about üëá <br><br>T-shaped people:<br><br>As your career progresses, you&#39;ll start to become a &quot;T-shaped person.&quot;<br><br>A T-shaped person is someone who, like the letter &quot;T&quot; is visualized, has a wide but shallow knowledge and experience about a lot of things.<br><br>üßµ <a href="https://t.co/RgV5WnCBsz">pic.twitter.com/RgV5WnCBsz</a></p>&mdash; AnkurüíöJavaScript (@TheAnkurTyagi) <a href="https://twitter.com/TheAnkurTyagi/status/1289824356193824770?ref_src=twsrc%5Etfw">August 2, 2020</a></blockquote>]]></content:encoded>
            <author>jackdomleo7@gmail.com (Jack Domleo)</author>
        </item>
        <item>
            <title><![CDATA[How I optimised my online presence to get opportunities.]]></title>
            <link>https://jackdomleo.dev/blog/2020/how-i-optimised-my-online-presence-to-get-opportunities</link>
            <guid>https://jackdomleo.dev/blog/2020/how-i-optimised-my-online-presence-to-get-opportunities</guid>
            <pubDate>Mon, 03 Aug 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[I'm a firm believer that a good online presence can lead to a really successful career path that may open you up to better job opportunities...]]></description>
            <content:encoded><![CDATA[
## Why did I join Twitter?

I'm a firm believer that a good online presence can lead to a really successful career path that may open you up to better job opportunities, invitations to talk shows and tech events, new friends, a widened knowledge base and understanding of tech.

I joined [Twitter](https://twitter.com/jackdomleo7) in April 2020, based on advice from one of my colleagues, [Andrew Baker](https://twitter.com/ajbkr), who said to me, "Twitter can be used as a way of following people with a similar interest to you and seeing how they go about their projects and what tech they use. It's also useful to share your own work and hopefully receive some feedback. For example, you could tweet your [Cooltipz.css](https://cooltipz.jackdomleo.dev) project and see if anyone is willing to give it a test out and respond with some constructive feedback."

So, that's exactly what I did, I joined [Twitter](https://twitter.com/jackdomleo7) and I was hooked, not addicted. When I started following people and seeing some of the creations on CodePen, I was amazed and wanted to be involved more.

I began creating my own [CodePen](https://codepen.io/jackdomleo7)s (I already had an account with some pens I was trialling) and seeing what little projects I could create. CodePen picked a few of my projects to be featured on the homepage and I started to be noticed.

Likewise, I was consistently tweeting about topics that mean a lot to me - front-end development, UI/UX, accessibility, self-development, motivation and inspiration - and starting creating my niche. Although I was only receiving approximately 2-3 likes per tweet, I was being noticed and anyone visiting my profile could see exactly what I was about and had some examples of what they would expect from my tweets.

## What do I mean by opportunities?

When I say 'opportunities', I'm not specifically talking about job opportunities, although they are a valid candidate. Here is a list of some of the opportunities a great online presence can bring you (I have been offered most of them):
- New/better job
- New friends & connections
- Exposure to new tech
- Offers to do a talk either at an event or on a podcast
- Offers to affiliate promote (Gumroad, Amazon, etc)
- Paid tweets (yes, people will pay you to tweet)
- Free stuff (books, t-shirts, mugs, etc)
- Recognition
- Large following
  - Which can be beneficial if you are ever selling anything like a book or a course
- Freelance jobs
- Paid articles (some companies may pay you to write for them)
- And many more!

## What did I do and what am I doing?

Jump ahead a few months to now (3 August 2020) and I'm up to almost 5000 followers on [Twitter](https://twitter.com/jackdomleo7), almost 150 followers on [CodePen](https://codepen.io/jackdomleo7), almost 300 followers on [DEV.to](https://dev.to/jackdomleo7), almost 60 followers on [GitHub](https://github.com/jackdomleo7) and over 300 connections on [LinkedIn](https://linkedin/in/jackdomleo7).

I'm going to show with you a list of resources and techniques that really helped **me** develop a good online presence and still growing.

- I keep my online presence apolitical
  - I want to keep my feed and my presence relating to tech and helping people. As soon as I post something about politics, not all of my audience will agree with me and I am essentially denying that audience.
- I tweet 95% about my niche and 5% other stuff
  - My followers followed me for a reason, my niche attracted them to my profile and to click `Follow`, so they would expect me to tweet about that. But we are all human so it is ok to tweet once in a while about something about you.
- I stopped casually swearing
  - When you don't swear, even in a joke, you sound so much friendlier and professional and give the impression that you are confident in what you are saying without the need for swearing to aid you.
- Engage in other people's content
  - Not everything is about me, I take time to like and comment on other people's tweets, CodePens and DEV articles because a lot of stuff people share on Twitter is pretty amazing and is worth engaging with!
- I began ignoring the hate and trolls
  - At about 1500 followers on Twitter, I had my first troll telling me, "Developers should not have to relearn the basics, that's wasting time. They should just remember and move on." I replied to this asking why they thought it and I very quickly realised this person's goal was to make me feel triggered and become aggressive. Never again, people like that get the `Mute` and are not worth my time.
- I started cross-platform promoting
  - I try and make it as easy and as obvious as possible for someone who is on any of my profiles such as [Twitter](https://twitter.com/jackdomleo7), [CodePen](https://codepen.io/jackdomleo7), [DEV.to](https://dev.to/jackdomleo7), [GitHub](https://github.com/jackdomleo7), [LinkedIn](https://linkedin/in/jackdomleo7) or <nuxt-link to="/">my website</nuxt-link> to be able to navigate between the different platforms - go check out my profiles to see what I mean üòâ.
- Resize images for Twitter
  - Whenever I make a tweet with an image, I will always edit the image to have a size ratio of `16:9`, so it fits better as a thumbnail on someone's feed. This means the image won't be "cut off" when in preview. Twitter users are lazy, if they can't see all your image, it's very likely they will open it up in fullscreen and even more unlikely they will give it a like.
- I limit my retweets
  - Let it be said here that everything does not need retweeting. All your comments don't need retweeting either üòÖ. Keeping your profile clean of constant retweets will ensure new visitors are seeing **your** best content.
- BIO
  - I always maintain a true image of myself rather than an avatar image and always use my actual name in my name with no emojis or other characters and emojis. My Twitter BIO is quite strong and to the point and ensures new visitors know exactly what I'm about.
- My tweets are meaningful
  - It is incredibly rare I will tweet something that I don't think will have value to anyone. I will always try and tweet something that I feel will have credible value to my audience.
- Standard username across all platforms
  - Whether it's Twitter, LinkedIn, CodePen, GitHub or DEV, my username is always the same - `jackdomleo7`. I have a very unique name anyway so is easy for me to know my username will always be available. My username is also very recognisable so people can distinguish me easily.
- Standard profile picture and banner
  - My profile picture currently is so recognisable that instantly people recognise who I am (I've also been used as memes because I have the perfect "meme" face üòÖ). My banner on Twitter and LinkedIn are the same, to keep it simpler for me but also so viewers can recognise my brand. (You can see my profile picture and banner at the time of writing below).

<figure>
  <img src="/blog/2020/how-i-optimised-my-online-presence-to-get-opportunities/me.png" alt="Jack Domleo face">
</figure>

<figure>
  <img src="/blog/2020/how-i-optimised-my-online-presence-to-get-opportunities/banner.png" alt="Jack Domleo banner">
</figure>

These are some of the primary techniques I use and in just a few months I have been opened up to so many opportunities and it can only get better, right? üí™

I also read a lot of books, so here are some that really helped me as a developer with an online presence:

<figure>
  <a href="https://gumroad.com/a/875132019" rel="nofollow noopener" target="_blank">
    <img src="/blog/2020/how-i-optimised-my-online-presence-to-get-opportunities/improve-your-online-presence-catalin-pit.png" alt="Improve Your Online Presence by Catalin Pit" />
  </a>
  <figcaption>
    <a href="https://gumroad.com/a/875132019" rel="nofollow noopener" target="_blank">Improve Your Online Presence</a> by <a href="https://twitter.com/catalinmpit" rel="nofollow noopener" target="_blank">Catalin Pit</a>
  </figcaption>
</figure>

<figure>
  <a href="https://gumroad.com/a/581530739" rel="nofollow noopener" target="_blank">
    <img src="/blog/2020/how-i-optimised-my-online-presence-to-get-opportunities/create-your-following-danny-thompson.png" alt="Create Your Following by Danny Thompson" />
  </a>
  <figcaption>
    <a href="https://gumroad.com/a/581530739" rel="nofollow noopener" target="_blank">Create Your Follwowing</a> (a really good course to accompany the Catalin Pit's book) by <a href="https://twitter.com/DThompsonDev" rel="nofollow noopener" target="_blank">Danny Thompson</a>
  </figcaption>
</figure>

<figure>
  <a href="https://randallkanna.com/the-standout-developer" rel="nofollow noopener" target="_blank">
    <img src="/blog/2020/how-i-optimised-my-online-presence-to-get-opportunities/the-standout-developer-randall-kanna.png" alt="The Standout Developer by Randall Kanna" />
  </a>
  <figcaption>
    <a href="https://randallkanna.com/the-standout-developer" rel="nofollow noopener" target="_blank">The Standout Developer</a> by <a href="https://twitter.com/RandallKanna" rel="nofollow noopener" target="_blank">Randall Kanna</a>
  </figcaption>
</figure>

<figure>
  <a href="https://gumroad.com/l/aUVXY" rel="nofollow noopener" target="_blank">
    <img src="/blog/how-i-optimised-my-online-presence-to-get-opportunities/decoding-the-technical-interview-process-emma-bostian.png" alt="Decoding The Technical Interview Process by Emma Bostian" />
  </a>
  <figcaption>
    <a href="https://gumroad.com/l/aUVXY" rel="nofollow noopener" target="_blank">Decoding The Technical Interview Process</a> by <a href="https://twitter.com/EmmaBostian" rel="nofollow noopener" target="_blank">Emma Bostian</a>
  </figcaption>
</figure>

## What's next?

Carry on. _Why stop?_

I'm doing fantastically well and can only improve to better my chances at bigger and better opportunities. I hope to be invited to tech talks, release a book and be recognised for my expertise.

Small improvements is all it takes to make yourself standout! üí™]]></content:encoded>
            <author>jackdomleo7@gmail.com (Jack Domleo)</author>
        </item>
        <item>
            <title><![CDATA[An Apprenticeship Interview]]></title>
            <link>https://jackdomleo.dev/blog/2020/an-apprenticeship-interview</link>
            <guid>https://jackdomleo.dev/blog/2020/an-apprenticeship-interview</guid>
            <pubDate>Sat, 18 Jul 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[Applying for a developer interview can be tough! I have listed some example questions and some tips & tricks to help you land your apprenticeship role!]]></description>
            <content:encoded><![CDATA[
As many of you would be aware by now, I do not have a Computer Science degree, or any degree for that matter. I became a developer through an apprenticeship that began in September 2018 - this article doesn't focus on my entire journey, however if you would like to know my journey, please consider reading my article on <nuxt-link to="/blog/2020/how-i-went-from-a-retail-assistant-at-17-to-landing-a-developer-role-at-19">How I went from a Retail Assistant at 17 to Landing a Developer Role at 19</nuxt-link>.

Here, I will focus on some questions that may occur in your apprenticeship interview and offer some guidance on how to prepare your answers and deliver them confidently.

## Disclaimer

Before we begin, please note that my path was not through university. I am in no way devaluing going to university, but an apprenticeship was the better option **for me**. If you feel university is the better option for you, by all means, go for it and I wish you all the best! üí™

In the modern-day, there are lots of debates about whether you need a computer science degree to become a developer. The fact is, employers want to hire the best developers they can get - this may mean experience, skillset, passion to learn or anything. It is down to the individual to make themselves stand out. I.e. If you feel having a degree will help you become the best developer you can be, fantastic, do it, take your path. However, if you feel an apprenticeship or a non-university path will help you become the best developer you can be, also fantastic, take your path!

It's also important to note, you can go to university, then get an apprenticeship afterwards! There is no fixed path. This article primarily focuses, but not limited to, candidates who don't plan on a university path.

## First Impressions

We've all been told "You never get another chance at a first impression", and it's true, completely true. The number one thing candidates get wrong is pretending to be someone they are not...

### Dress Code

If you're applying for a developer role, chances are, you're not going to be wearing a suit and tie all day, so why wear one to the interview? If a suit and tie is your style then, by all means, go for it, no one will judge. But if a suit and tie is really not your thing, that's ok, wear a polo shirt, a hoodie, or anything. As long as what you're wearing is clean and decent (I.e. not revealing) you will be ok. On the other hand, there are job roles where you absolutely should wear a suit and tie, like a salesperson, because this is a customer-facing role, whereas a developer is not.

<blockquote class="twitter-tweet"><p lang="en" dir="ltr">When I go for <a href="https://twitter.com/hashtag/developer?src=hash&amp;ref_src=twsrc%5Etfw">#developer</a> interviews, I dress for the job I have applied for.<br><br>These can be non-customer-facing roles. I wear what I usually wear, smart casual:<br><br>- Polo shirt<br>- Casual jacket<br>- Jeans/Chinos<br>- Clean trainers<br><br>I don&#39;t wear a suit &amp; tie. It&#39;s not me.<a href="https://twitter.com/hashtag/100DaysOfCode?src=hash&amp;ref_src=twsrc%5Etfw">#100DaysOfCode</a></p>&mdash; Jack Domleo (@jackdomleo7) <a href="https://twitter.com/jackdomleo7/status/1272464988515569665?ref_src=twsrc%5Etfw">June 15, 2020</a></blockquote>

### Attitude

Your attitude is important. Remember, you're **happy** to be there and you're thankful they invited you in for an interview. With this in mind, remember to smile and use your manners. It's ok to be nervous, but they will look for how you handle your nerves - breathe, take your coat off, think about your answers, smile.

You're at an interview for an apprenticeship, they are not expecting 5+ years with Node.js, 3 years with TypeScript and 7 years managerial experience. They primarily look for someone with passion! Because remember, they're investing in your learning.

### Be yourself... Seriously!

Too often you see candidates trying way too hard. Talk normally, smile normally and just be you. Don't think of it as an interview, think of it as a discussion about your future!

Yes, they are interviewing you, but you should also be there to interview them. _Is this somewhere you really want to work? Apprenticeships can last anywhere between 1 and 3 years, are you willing to spend that chunk of your life learning at this company?_ Ask questions. Test them. Here are some great questions you can ask the interviewer:

- Where does the company plan to be in 5 years?
- After the completion of the apprenticeship, where can I progress to within the business?
- What's the plan for hiring future apprentices?
- How much time will I be given to do coursework?
- What's my team like?

Ask anything you want to know so you are absolutely certain, if you were offered the role, you want to accept. When they ask you your hobbies and interests, say something not-related to the job! _E.g. I like skipping through meadows and sniffing flowers. OR I like to bake realistic cakes. OR I like to collect model trains._ If they wanted to know about your interests related to the job (whether it be coding or whatever role you're applying for), they will ask that specifically.

---

## Example Interview Questions

Below are some examples of typical apprenticeship interview questions. I'll give a brief answer about how I would answer them, but you should tailor them to suit you.

Before we start, my top tip is to **not** rehearse as many interview questions as you can. The answers that interest interviewers the most are the ones that aren't what they've already heard. Sure, rehearse common questions, but be sure you're ready to answer anything in an effective way.

_Interviewer: Why are you wearing a hat?_
_You (think): Oh no, I didn't rehearse this...._
_You: It helps me keep my cool._

My second top tip is to not repeat your CV/resume! They have already read through your CV/resume, they don't need you repeating it, maybe start an answer with, "Here's something that's not on my CV/resume..." They didn't invite you to an interview to tell them stuff they've already read.

### Why are you choosing an apprenticeship?

_I feel I progress better if I learn as I do. I found school quite difficult sitting in class listening to the teacher and writing it down without putting it straight into practice. I also like the fact of getting paid to learn and not accruing thousands of pounds of debt._

### Why not university?

_The university lifestyle and culture never appealed to me. I wanted to start my life and career earlier because I know what I want to do. In my opinion, university would hold me back for 3 or so years._

### Where are you wanting to go in your career?

_Up. Although, I can't say for certain, software and tech is such a forever changing industry. I'll take it one day at a time, but right now and for the immediate future, I feel I'm particularly interested in web development._

### Why do you feel you would fit this role?

_I'm passionate to learn._

### What do you already know?

_In school/college I studied the theory of databases, networks, binary, etc. I also did some practical programming with Python building scripts to perform a task or mimic and an algorithm. We also touched on HTML and CSS._

### Why do you want to work for us?

I recently tweeted about this and got some wild feedback, which I thoroughly respect. My good friend [Skay](https://twitter.com/skay_tech) collected all the feedback and consolidated it into an article that I urge you to read on this question because it gets asked a lot!

üëâ ["Why do you want to work for us?" - Interview Question (Demystified)](https://dev.to/skaytech/why-do-you-want-to-work-for-us-interview-question-demystified-1gh2)

<blockquote class="twitter-tweet"><p lang="en" dir="ltr">Interviewer: &quot;Why do you want to work for us?&quot;<br><br>Developer: &quot;You&#39;re hiring for a developer...&quot;<br><br>I honestly really hate this interview question. üòÖ<br><br>Unless your company is a global sensation and developers travel the world to apply for you, don&#39;t ask it.<a href="https://twitter.com/hashtag/100DaysOfCode?src=hash&amp;ref_src=twsrc%5Etfw">#100DaysOfCode</a> <a href="https://twitter.com/hashtag/CodeNewbie?src=hash&amp;ref_src=twsrc%5Etfw">#CodeNewbie</a></p>&mdash; Jack Domleo (@jackdomleo7) <a href="https://twitter.com/jackdomleo7/status/1283332752188805120?ref_src=twsrc%5Etfw">July 15, 2020</a></blockquote>

---

## The coding task

Like many other developer interviews, it is likely you will be asked to do some kind of coding task.

Don't panic!

They are NOT looking for someone who can complete the task (although that would be a bonus), they are looking for how you approach and tackle the task in an effective way.

It's not the end of the world if you don't finish it!

---

## Your portfolio

They may or may not ask to see your portfolio, don't worry, I didn't know what git was, nevermind GitHub when I went to my apprenticeship interview.

Your portfolio can be anything, as long as you advertise it!

- Personal website (see mine at [jackdomleo.dev](https://jackdomleo.dev))
- [GitHub](https://github.com)
- [CodePen](https://codepen.io)
- Blog articles
  - [DEV.to](https://dev.to)
  - [Medium](https://medium.com)
- [Tech Twitter](https://twitter.com/i/lists/1273224332521717761) (list created by [@NehemiahKiv](https://twitter.com/NehemiahKiv))
- [LinkedIn](https://linkedin.com)
- [Dribbble](https://dribbble.com)
- And more!

However, since you're going for an apprenticeship, it is a given you won't have that much, if any, experience and is therefore acceptable to have a very small or no portfolio.

Nevertheless, it might be ideal to start looking into some platforms such as [GitHub](https://github.com) and [CodePen](https://codepen.io) to create some accounts to show that you are ready.

<blockquote class="twitter-tweet"><p lang="en" dir="ltr">Remember, there is more to a developer&#39;s portfolio than <a href="https://twitter.com/hashtag/GitHub?src=hash&amp;ref_src=twsrc%5Etfw">#GitHub</a>!<a href="https://twitter.com/hashtag/Developers?src=hash&amp;ref_src=twsrc%5Etfw">#Developers</a> strive for amazing GitHub profile but miss the bigger picture.<br><br>Your portfolio can also be:<br>- <a href="https://twitter.com/CodePen?ref_src=twsrc%5Etfw">@CodePen</a><br>- Twitter contributions<br>- LinkedIn contributions<br>- Articles<br>- Web presence<br><br>Anymore? <a href="https://twitter.com/hashtag/100DaysOfCode?src=hash&amp;ref_src=twsrc%5Etfw">#100DaysOfCode</a></p>&mdash; Jack Domleo (@jackdomleo7) <a href="https://twitter.com/jackdomleo7/status/1271890411750121478?ref_src=twsrc%5Etfw">June 13, 2020</a></blockquote>

---

Hopefully, this article gave you a nice insight about how you can prepare for an apprenticeship interview. It's important to take away from this that it's ok to not have a 50-page portfolio!

I wish you all the best!

Tweet me [@jackdomleo7](https://twitter.com/jackdomleo7) about whether this article helped you. üòä]]></content:encoded>
            <author>jackdomleo7@gmail.com (Jack Domleo)</author>
        </item>
        <item>
            <title><![CDATA[Focused Creativity - Don't Lose Focus]]></title>
            <link>https://jackdomleo.dev/blog/2020/focused-creativity-dont-lose-focus</link>
            <guid>https://jackdomleo.dev/blog/2020/focused-creativity-dont-lose-focus</guid>
            <pubDate>Wed, 15 Jul 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[There is no official definition of 'focused creativity', but this is what I define 'focused creativity' as...]]></description>
            <content:encoded><![CDATA[
<blockquote class="blockquote">
  Focused creativity is the act of limiting some bounds to focus on one or a few aspects of a particular area.
</blockquote>

**OR**

<blockquote class="blockquote">
  Focused creativity is the abstraction of particular aspects on a small project on your learning journey to improve the desired skills.
</blockquote>

## How do I apply focused creativity?


Let's say you're learning  CSS art; every day, you create something new but, you have an infinite number of project ideas that you could possibly do with CSS art, literally anything! You can spend a really long time deciding what to do.

"Do I do a CSS car today? What about a CSS teddy bear? No, a cake! Wait, the car sounds good!"

You could apply focused creativity here by choosing a theme before you start learning CSS art. For example:

"I'm going to learn CSS art by creating a different pure CSS car, every day."

This gives you focus - _you're creating a car_. A goal - _the car should be better than yesterday's car_.  And a purpose - _I'm going to compare the CSS used to create each car and identify where I have improved_.

Focused creativity is applied abstraction - stripping away anything that will distract you from your focus.

That's all to focused creativity. It may not apply to all situations, but it will apply to a lot. Let's go through some more examples.

## Examples


### [100 Days of Buttons](https://twitter.com/hashtag/100DaysOfButtons)

A button is a very simple, and a very common UI component. Design a different button every day. Your focus is the button and you can focus on improving your CSS.

- **Focus:** Button, CSS, UI, UX
- **Abstract:** HTML

### No Preview HTML CSS

Also known as [#NoPreviewHtmlCss](https://twitter.com/search?q=%23NoPreviewHtmlCss). This is a challenge I created where you create something in HTML and CSS but you're not allowed to see the preview until you are finished. The focus of this challenge is to focus on thinking what code you're actually writing, rather than relying on the preview to make tweaks from. The design here is not important, but your own understanding of your own code and making it clean and semantic will get you far in this challenge.

- **Focus:** HTML, Semantics, CSS, clean code
- **Abstract:** UI, design

### [Daily UI](https://www.dailyui.co)

Daily UI is a daily challenge where you are given a UI component each day to create - they only want the UI. 

- **Focus:** HTML, CSS, UI, UX
- **Abstract:** Functionality, wasting time thinking of a component

---

There are plenty more examples of focused creativity! If you've got any ideas after reading this article, please do share them!!

Hopefully, this short article was insightful into a phrase I hope to be used commonly to encourage quality learning! üí™]]></content:encoded>
            <author>jackdomleo7@gmail.com (Jack Domleo)</author>
        </item>
        <item>
            <title><![CDATA[@media (hover: hover) - CSS Media Query]]></title>
            <link>https://jackdomleo.dev/blog/2020/hover-css-media-query</link>
            <guid>https://jackdomleo.dev/blog/2020/hover-css-media-query</guid>
            <pubDate>Mon, 06 Jul 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[The hover CSS media feature can be used to test whether the user's primary input mechanism can hover over elements.]]></description>
            <content:encoded><![CDATA[
"The `hover` CSS media feature can be used to test whether the user's primary input mechanism can hover over elements." - [MDN web docs](https://developer.mozilla.org/en-US/docs/Web/CSS/@media/hover)

Not to be confused with the `:hover` psuedo selector, this is a **media query** you may have never used or never considered using.

Let's look at an example and see how it could be improved using the `hover` media query.

Let's assume we're using this HTML for the below demonstration.

```html
<button class="button">
  Hover me?
  <svg>...</svg>
</button>
```

---

## Showing an icon on hover

<blockquote class="blockquote">
  I want a button, that when hovered will show an icon. The icon should be hidden when not hovered.
</blockquote>

This is a typical feature request. It's not very detailed, but as front-end developers, it's enough for us to work with and create a prototype button at the least.

For this to work, we may jump to do something like this:

```css
.button {
  background: darkorange;
  color: white;
  border: none;
  padding: 1rem;
  text-align: center;
  position: relative;
  cursor: pointer;
}

.button svg {
  height: 2rem;
  width: 2rem;
  position: absolute;
  top: 50%;
  right: 0.6rem;
  fill: currentColor;
  opacity: 0;
}

.button:hover {
  padding-right: 3rem;
}

.button:hover svg {
  opacity: 1;
}
```

This would for sure show the icon when the button is hovered! üí™ But it doesn't work on my mobile... It doesn't know I'm hovering the button.

So, how do we cater for touch screen devices that can't hover? A common solution would be to always display the icon on _mobile devices (take note of this, I will come back to it later)_ and add the hovering functionality for larger screens by using a `min-width` media query, typically these are screens that are `768px` or wider:

```css
.button {
  background: darkorange;
  color: white;
  border: none;
  padding: 1rem;
  padding-right: 3rem;
  text-align: center;
  position: relative;
}

.button svg {
  height: 2rem;
  width: 2rem;
  position: absolute;
  top: 50%;
  right: 0.6rem;
  fill: currentColor;
  opacity: 1;
}

@media (min-width: 768px) {
  .button {
    padding-right: 1rem;
    cursor: pointer;
  }

  .button svg {
    opacity: 0;
  }

  .button:hover {
    padding-right: 3rem;
  }

  .button:hover svg {
    opacity: 1;
  }
}
```

Great! We now have a button that always shows the icon on devices with a screen width less than `768px` and will initially hide the icon on devices with a screen width of `768px` wide or wider.

Chances are, this works for most cases and has been an acceptable solution for many years. However, we can't assume a device doesn't have a hover input mechanism just because of its screen width, and vice-versa.

This is where our `hover` media query comes in. Let's take a look at how we can refactor our `min-width` to use `hover` instead.

```css
.button {
  background: darkorange;
  color: white;
  border: none;
  padding: 1rem;
  padding-right: 3rem;
  text-align: center;
  position: relative;
}

.button svg {
  height: 2rem;
  width: 2rem;
  position: absolute;
  top: 50%;
  right: 0.6rem;
  fill: currentColor;
  opacity: 1;
}

@media (hover: hover) {
  .button {
    padding-right: 1rem;
    cursor: pointer;
  }

  .button svg {
    opacity: 0;
  }

  .button:hover {
    padding-right: 3rem;
  }

  .button:hover svg {
    opacity: 1;
  }
}
```

Outside any media query, we define our base styles that apply to everything. Inside our `hover` media query, we define styles that are specific to devices that have a hover input mechanism.

Can you see how this is better than determining hover specific styles based on screen size?

It's also a cleaner method because we define our **hover** styles in our **hover** media query, it's grouped them nicely for us. These `hover` styles would be harder to identify in the stylesheet if they were encapsulated in a `min-width` media query.

---

For a working example, I created a CodePen below (with a few extra CSS properties) that I hope will help üôÇ.

<codepen slug-hash="jOWZRXX" pen-title="hover: hover media query"></codepen>]]></content:encoded>
            <author>jackdomleo7@gmail.com (Jack Domleo)</author>
        </item>
        <item>
            <title><![CDATA[A St-St-Stuttering Developer]]></title>
            <link>https://jackdomleo.dev/blog/2020/a-st-st-stuttering-developer</link>
            <guid>https://jackdomleo.dev/blog/2020/a-st-st-stuttering-developer</guid>
            <pubDate>Sat, 04 Jul 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[Do you know someone who stutters? I stutter. My stutter doesn't hold me back from being a developer.]]></description>
            <content:encoded><![CDATA[
## What is a stutter?

A stutter, which can also be more formally known as a stammer is a type of speech impediment that occurs when:

- you repeat sounds or syllables (E.g. "m-m-m-monkey")
- sounds are extended (E.g. "mmmmmmonkey")
- words or sounds get stuck or don't come out
- a stutter can often cause a stutterer to make weird facial expressions while they are stuttering

The severity of a stutter can vary based on:
- The person
- The specific situation

Anyone can stutter, some people are diagnosed with it. _Why?_

Not everyone is perfect, some people who are not diagnosed can still have an occasional stutter - a really common example is when they're scared (E.g. "G-g-ghost!"). But some people are diagnosed with it by a professional speech therapist, like myself. There are two types of stutterers:

- developmental stammering: the most common that happens in early childhood when speech and language skills are developing quickly
- acquired or late-onset stammering: is relatively rare and happens in older children and adults as a result of a head injury, stroke or progressive neurological condition. It can also be caused by certain drugs, medicines, or psychological or emotional trauma

I've had developmental stammering since I could talk and it's never gone away... But, it has gotten a lot easier.

## My experience

### Childhood (Ages 3 - 15)

Childhood is where the majority of stammers occur. But most of them will fade away over time, some will not.

My childhood was difficult because no-one really knew what a stutter was and let's face the facts, kids are mean. _It's true._ If you are different, you get picked on.

My stutter was the worst in my younger years - I was stuttering on literally every syllable (E.g. "Hhhhi, mmmy n-n-n-n-name i-is J-j-j-jack."). Very few people could understand what I was saying, because by the time I'd finished the sentence, they'd already forgotten what I said at the start.

I attended speech therapy for 10 years, between the ages of 5 and 15, where I learned various speech techniques. We called my stutter, "bumpy talk" üòÖ. You wouldn't notice a stutterer using these techniques unless you were told about it. Some techniques were:

- Breathing
- Slowing down
- Facing the fear head-on
- Ease into a word
- Think about what you want to say before you say it
- Breaking up sentences into manageable chunks
- And more

These are really useful to help overcome stuttering but almost always we have to decide the best technique for a situation almost instantly - we don't have time to plan our conversations.

I let my fear hold me back from nearly everything - speaking in school assemblies, school plays, to friends and family, on the phone, on Xbox Live etc.

### Teenager and adulthood (Ages 15+)

By 15, I was nearing the end of my monthly speech therapy and was a lot more comfortable with speaking:

- I stutter once or twice a sentence (dependent on the words used and length of the sentence)
- My friends were getting older and they understood more about my stutter
- I was using the techniques I learned nearly all the time
- I faced my fear head-on - I offered to speak in front of people

I used to get offended when someone made a little joke and genuinely was curious about my stutter - I instantly thought they were making fun of me. I learned to become immune to being offended because in fact, they were not trying to offend me. Some people are really interested in my stutter and I am always happy to answer any curiosity they may have. But, I've learned to joke with people and make jokes about stuttering too. For example, I joked that I would be a perfect voice actor to sing the theme tune for [Dora the Explorer](https://www.youtube.com/watch?v=xlkH17apLMY) ("D-D-D-D-D-Dora...") - _A children's TV show that encourages adventure and learning Spanish_.

I used to tell people I stuttered before engaging in a conversation - I no longer do this. I will engage in any conversation, and if I'm asked if I stutter, I don't get offended, I don't get upset or embarrassed, I straight up say, "Yes, thank you for noticing" üôÇ. 

I hardly stutter any more but I have periods where I do. If my stress levels are high, I'm more likely to stutter. If my stress levels are low, then I'm calm, and I probably won't stutter and will feel much better about myself. But when I do stutter, I really don't care because I'm allowed to.

Getting older, my stutter, my attitude towards my stutter and other people's responses to my stutter have greatly improved and I am eternally grateful for that! üôè As a child, other children would laugh at my stutter, but it's obvious as an adult that's no longer the case. Don't get me wrong though, I do encounter the odd person who decides to shame me for my stutter but I learned to ignore the hate a long time ago.

I don't let my stutter hold me back from anything anymore -  and I mean nothing! I will happily make a phone call, talk up in meetings, do public speaking if I had the opportunity, and many more speaking activities because I'm not embarrassed of my stutter and I won't let it prevent me from being where I want to be.

## Working with someone who stutters

I turned to my colleagues prior to writing this article because I wanted their opinions on what it's like to work with me (someone who stutters). Some of my colleagues have asked to remain anonymous but were happy for me to use their response and I have respected their decision.

<figure class="blockquote">
  <blockquote>
    Hi all, bit of a strange request but I appreciate anything, good or bad!! I want to write an article about stuttering in the workplace (title to be confirmed). On Twitter, I've had fellow stutterers approach me asking how I work, etc. So I thought I'd write an article to help raise awareness and raise their spirits. I'd like to write a section with quotes about how people who work with me feel. So, what's it like working with someone with a stutter? Did it take you time to get used to? Did you have to ask me what the right thing to do is? Thank you in advance! I can reference you in the article, but if you'd rather it be anonymous, that's ok too. üòä
  </blockquote>
  <figcaption>
    - Me
  </figcaption>
</figure>

<figure class="blockquote">
  <blockquote>
    I would say that for me, it's fighting the urge to not complete words or sentences on your behalf. To do so would be rather presumptious, at least to my mind. My internal monologue gets to a point where I'm chivvying you on, "Come on Jack, you got this. Spit it out man!" üòÉ
  </blockquote>
  <figcaption>
    - <a href="https://twitter.com/ajbkr" rel="nofollow" target="_blank">Andrew Baker</a>
  </figcaption>
</figure>

<figure class="blockquote">
  <blockquote>
    I had a good friend when I was a teenager who had a stutter. We used to play Quake at LAN parties together. He had a specific trigger that made him stutter. In his case it was when he was about to say something hilarious. The more he stuttered the more we knew the punchline was going to be a killer, so we waited with baited breath for it. He never disappointed. I guess from that experience I know to simply wait patiently. Hope that is the right thing to do.
  </blockquote>
  <figcaption>
    - Anonymous
  </figcaption>
</figure>

<figure class="blockquote">
  <blockquote>
    Sometimes there's an urge to complete a word/sentence. üòÖ I obviously ignore that urge. Also that's a solid idea for a blog article. üëå
  </blockquote>
  <figcaption>
    - Anonymous
  </figcaption>
</figure>

<figure class="blockquote">
  <blockquote>
    Sometimes I feel awkward for you, like I'm willing you to get through it, but that feels like my issue and not yours. I'm always impressed by how you don't let it stop you speaking out, I'm much shyer in meetings than you are.
    <br/>
    This discussion has prompted me to read up about stuttering and it's quite fascinating. I was a stutterer at nursery age, but it just seemed to go away after a few years. Apparently this is quite common, over half of childhood cases spontaneously resolve. I never really considered asking you how I should deal with your stutter, but that's the same way I wouldn't ask a non-native English speaker how to deal with the fact that their language isn't 100%. We just adapt and deal with it, and don't really give it much thought.
  </blockquote>
  <figcaption>
    - <a href="https://www.linkedin.com/in/stephen-robson-a52005106" rel="nofollow" target="_blank">Ste Robson</a>
  </figcaption>
</figure>

<figure class="blockquote">
  <blockquote>
    At first I thought it was nervousness but then I realised it was a stutter. It didn't take me long at all to get used to it but I am a quiet person and usually listen rather than talk. Though your last question made me realise I should have asked you about it rather than assumed, so apologies for that, I am always worried about asking and being rude.
  </blockquote>
  <figcaption>
    - <a href="https://twitter.com/SpencerHallDev" rel="nofollow" target="_blank">Spencer Hall</a>
  </figcaption>
</figure>


Some interesting and honest responses here. Some I predicted, some I did not. I understand a stutter can put fellow colleagues (or anyone for that matter) in an awkward position because they don't really know how to approach it. I want to say thank you to my current colleagues for their responses above and that you've done nothing in the wrong at all, you all approached it in your own way. üí™


## How can I help someone with a stutter?

This is the single most asked question I get about my stutter üòÖ. So, here are some common things we stutterers appreciate:

- Don't finish our sentences.
  - There is nothing more annoying than me struggling on a word and the other person sitting words trying to guess what I'm going to say üòÖ.
- Don't use our stutter as your chance to interrupt.
  - Just because I'm stuttering and it appears the conversation has come to a pause, this is not your cue to speak. This is different when on a voice call because it's not always obvious if we're stuttering or if we're genuinely done talking.
- If you notice we stutter, don't be afraid to ask.
- Don't assume we will let our stutter hold us back.
- Be patient, we will eventually say what we need to say.
- You can make jokes but don't shame us.

Keeping these key points in mind can ensure a healthy conversation üòä.

<figure>
  <img src="/blog/2020/a-st-st-stuttering-developer/please-wait.png" alt="Two people talking with one guessing words while the other stutters.">
  <figcaption>https://www.frontiersin.org/files/Articles/494542/frym-07-00153-HTML-r1/image_m/figure-3.jpg</figcaption>
</figure>

## What is it like?

I take my stutter with me everywhere I go. It's been by my side through school, extra-curricular activities and work. I've demonstrated it to my friends, family, colleagues and strangers I happen to be in conversation with. For most stutterers, school is the hardest part because you're prone to being made fun of - I was often greeted with "Hey J-J-J-Jack, HAHA". Working in retail and an office environment, I can honestly say I've had no issues at all, except maybe a few incidents in retail. I'd expect no issues from an office because it's more of a formal environment, however I was expecting some negativity working in retail. The only issues I encountered in retail are when I encountered a customer who was initially not particularly happy when they entered the shop. They'd approach me demanding, "Show me where these are [them showing me an item of clothing they've previously purchased]! I want an exchange." This instantly shocked me and raised my stress levels, I would often stutter in these situations, with one man storming off saying, "For God sake, I haven't got time for this." But for the most part, I never encounter any issues with anyone. üôÇ

## Stutterers in the wild

Below are some resources about stuttering that I really like.

### King George VI of England and The King's Speech

His majesty, King George VI, reigned during World War 2. He became king when his older brother, King Edward VIII resigned in <time datetime="1936">1936</time>. King George had a stutter which made him afraid of becoming King. A movie was released in <time datetime="2010">2010</time> called [The King's Speech](https://www.imdb.com/title/tt1504320), which is one of the most inspiring stutter stories, in my opinion.

### Porky Pig from Looney Tunes

Porky Pig stutters because his voice actor stutters, [Joe Dougherty](https://en.wikipedia.org/wiki/Joe_Dougherty). I could relate to Porky Pig as a child because of my love for Looney Tunes and because I also spoke very fast and didn't think about what I wanted to say. Watch Porky Pig's debut [here](https://www.youtube.com/watch?v=WYem4JwUzcA).

<figure>
  <img src="/blog/2020/a-st-st-stuttering-developer/porky-pig.gif" alt="Porky Pig">
  <figcaption>Porkky Pig from Giphy https://media.giphy.com/media/xa5MHnjO4pxNC/giphy.gif</figcaption>
</figure>

<youtube video-title="Porky Pig's Debut" url-hash="WYem4JwUzcA"></youtube>

### Fermat Hackenbacker from Thunderbirds

[Fermat Hackenbacker](https://thunderbirds.fandom.com/wiki/Fermat_Hackenbacker) is a fictional character from the TV show and movie, The Thunderbirds. I really like [this scene](https://www.youtube.com/watch?v=85PC8-fM49Y) between Fermat and his father, Brains.

<youtube video-title="Thunderbirds Movie Geek Father & Son" url-hash="85PC8-fM49Y"></youtube>

### Samuel L. Jackson

This icon needs no introduction, but, did you know he used to stutter? You can watch an interview [here](https://www.youtube.com/watch?v=wnhvX63MCSo#t=1m09s). They say some stutters have a trigger, a word or phrase they say when they get annoyed at stuttering. Mine used to be "sugar!" Samuel L. Jackson's trigger is a little more... explicit. "M*th\*rf\*ck\*r" is his trigger word, which is part of the reason you hear him saying it a lot in movies; it's like his catchphrase.

<youtube video-title="Samuel L. Jackson on Acting, His Childhood And His Stutter" url-hash="wnhvX63MCSo"></youtube>

### Drew Lynch

Drew Lynch is a late stutterer due to a softball injury, but he turned his stutter into a positive. He entered [America's Got Talent](https://www.youtube.com/watch?v=5tN8zQgDtSQ) and did extremely well!

<youtube video-title="Top Comedian Drew Lynch Gets Golden Buzzer on America's Got Talent 2015" url-hash="5tN8zQgDtSQ"></youtube>

### Woman in the audience on Steve Harvey show

A brave young woman receives advice for past stutterer Steve Harvey and is truly great! - Watch [here](https://www.youtube.com/watch?v=zZ4XNEDSKWY).

<youtube video-title="Steve Harvey's Powerful and Personal Response to Stuttering" url-hash="zZ4XNEDSKWY"></youtube>

---

This article was written because I've had a few people message me who also have stutters and I wanted to help them realise it's OK to stutter. So many people get really far in life with a stutter because they don't let it hold them back. üí™]]></content:encoded>
            <author>jackdomleo7@gmail.com (Jack Domleo)</author>
        </item>
        <item>
            <title><![CDATA[How I went from a Retail Assistant at 17 to Landing a Developer Role at 19]]></title>
            <link>https://jackdomleo.dev/blog/2020/how-i-went-from-a-retail-assistant-at-17-to-landing-a-developer-role-at-19</link>
            <guid>https://jackdomleo.dev/blog/2020/how-i-went-from-a-retail-assistant-at-17-to-landing-a-developer-role-at-19</guid>
            <pubDate>Fri, 19 Jun 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[My journey to a developer is an alternative path to the norm. I'm going to share my journey so far with you in detail and offer my advice to new developers.]]></description>
            <content:encoded><![CDATA[
<blockquote class="twitter-tweet" data-conversation="none" data-theme="light"><p lang="en" dir="ltr">I am currently in the middle of writing an article of my journey that I hope will inspire others.<br><br>Would anyone be interested in reading?</p>&mdash; Jack Domleo (@jackdomleo7) <a href="https://twitter.com/jackdomleo7/status/1273016612900274176?ref_src=twsrc%5Etfw">June 16, 2020</a></blockquote>

## Overview

In this article, I will share my experience on how I went from being a student to becoming a respected developer at 19 years old. I will share my tips and advice, what I had to sacrifice, and what were my regrets and commitments. By the end of this article, I hope you will feel inspired to share your journey.

**I want to first get this out of the way: My age does not matter! This article is for anyone of any age! Anyone can make the journey to a developer at any point in their life.**

<blockquote class="twitter-tweet"><p lang="en" dir="ltr">I work with a 22 year old that learned to code.<br><br>I was 30 when I started to learn to code.<br><br>My friend was 49 when he made the transition to tech.<br><br>I worked with a PHENOMENAL woman who was 60 when she got her job as a frontend developer!<br><br>You absolutely got this!üí™üèΩ<a href="https://twitter.com/hashtag/100DaysOfCode?src=hash&amp;ref_src=twsrc%5Etfw">#100DaysOfCode</a></p>&mdash; Danny Thompson (@DThompsonDev) <a href="https://twitter.com/DThompsonDev/status/1260384668526039040?ref_src=twsrc%5Etfw">May 13, 2020</a></blockquote>

Lately, you have all been asking what my path was and how I got to where I am today as a developer, so I created this article to show you that anyone can become a developer.
## My Dreams and Goals

- Be the best front-end developer I can be for myself
- Be the best developer I can be for a company OR start freelancing
- Inspire others to become a developer
- Encourage students to thoroughly weigh out the options between an apprenticeship and university
- Help others: there is a fantastic community where I see this everyday

I really love front-end development - HTML, CSS, JavaScript, design, calling APIs, accessibility, UI & UX - all of it interests me and I want to learn more.

I want to strive to be the **best front-end developer I can be for myself**, but I will never reach that goal. _Why?_ This goal for me is always just out of reach, I will always trend towards it but will never get there; this is what motivates me to learn more, to do more and to help and inspire others. The fact that I never reach it doesn't mean I'm failing, it means I'm always reaching higher, I haven't capped my success, **"Don't cap your success"** ([Danny Thompson](https://twitter.com/DThompsonDev/status/1271974653880348678)). It's not an unrealistic goal; it's an inspirational goal, that any of us can have.

You will strive and excel in an area if your heart is in it! Don't force yourself into anything you don't enjoy. It won't get you far. Don't let anyone else force you into that, either.

## My Journey (so far)

My journey is simple: I began as a student who found part-time jobs while studying, decided not to go to university, landed an apprenticeship straight after sixth form, became unemployed for 5 weeks, then landed a Junior Developer role and within 3 months earned a promotion to a Developer role. Nevertheless, I have written my journey in detail, in case you are interested.

<figure>
  <img src="/blog/2020/how-i-went-from-a-retail-assistant-at-17-to-landing-a-developer-role-at-19/timeline.png" alt="A timeline of my journey">
  <figcaption>
    A timeline of my journey before I wrote this article
  </figcaption>
</figure>

For a good reference, please check out my [LinkedIn profile](https://www.linkedin.com/in/jack-domleo).

I'm not saying this is the only journey. But it's my journey and it's entirely possible for it to be yours too.

### Student and Pre Full-time Work

Before we dive into my education and part-time jobs, let's establish some definitions and what they mean to me living in England:

- **GCSE**: General Certificate of Secondary Education (level 2 qualification)
- **A-Level**: GCE (General Certification of Education) Advanced Level (level 3 qualification)
- **Sixth Form**: 2 years of post-GCSE academic education where students usually study their A-Levels

In England, it's the law to be in the education system until the age of 18. Usually, students will take one of three paths after their secondary education: Sixth form, college, or a lower apprenticeship. Each of these will offer some sort of level 3 qualification, or multiple level 3 qualifications. Each of these paths are usualy post-secondary school and pre-university. However, not all of us choose the university path...

#### School

As a child, I never knew what I wanted to be when I grew up. I had some ideas and suggestions such as a Pilot, Ground Crew, Scientist or IT Technician, but I had no definitive career goal until half way through my final year of sixth form. Notice I didn't even consider Software Developer as an option. Strange, right?

I studied Python as my first programming language, and found it difficult. It was challenging and frustrating. I told myself, "You'll never be a developer. You can't even write a simple script" - I didn't even know what a script was. Early on, I had already felt that I was a failure. I kept pushing through Python and Computer Science theory with resilience and ambition, but was not picking it up easily. In my final year of sixth form, the concept of programming finally clicked for me and I understood why we need programming and why programming is the future!

I would like to give my kudos and special thanks to my Computer Science teachers who supported me throughout school and sixth form, provided me with the education needed, and guided me to where I am today - [Mr Chris West](https://www.linkedin.com/in/chris-west-5b22a762) and [Mr Paul Stevens](https://www.linkedin.com/in/paul-stevens-b6154745).

#### GCSE

I began my secondary school (equivalent to high school in the U.S) education at [The Redhill Academy](https://www.theredhillacademy.org.uk) in <time datetime="2011">2011</time>, but began my GCSE education in <time datetime="2013">2013</time>. I studied English, Mathematics, Physics, Chemistry, Biology, Business Studies, German and Computer Science. I found subjects like Mathematics, Physics, Computer Science and German relatively easy, primarily because I enjoyed them, a lot. The other subjects I really really struggled with, I had to put a lot of time and effort into those subjects just to get a passing grade.

During GCSE, I still didn't know what I wanted to do when I grew up, so I had no real passion for any subject. All I knew is that it would be something related to Mathematics, Physics or Computer Science. I went to school, wrote some Python and came home, but I never resumed any programming at home. It just wasn't of any interest to me.

#### Office Assistant

After finishing my GCSEs, still with no real idea for a career, I found a simple part-time job - my first paying job - working as an Office Assistant for a small accounting company in Nottingham. My role included shredding files, filing, cleaning and making tea and coffee. I was paid a whopping ¬£3.72 per hour.

I stayed at this job for two months before beginning my A-Level education.

#### A-Level

I began my A-Level education at [The Redhill Academy Sixth Form](https://www.theredhillacademy.org.uk/sixth-form) in <time datetime="2016">2016</time>. I studied Physics, Mathematics, Computer Science and Chemistry (I only did an AS-Level in Chemistry - half an A-Level). So, I had a better idea of what I wanted to do. I had narrowed down my 10+ broad GCSE subjects into 4 A-Level subjects, all relating to each other in one way or another. I really enjoyed these subjects. They overlapped, covered interesting topics and motivated me to shape my career. But, let's not ignore the fact that I really really struggled with my A-Levels. I found them extremely difficult and challenging because they cram so much content and advanced knowledge into two years. In my opinion, sixth form isn't education - it's preparation for university. I regret going to sixth form and wish I had gone to a college, but the past is in the past.

Sixth form was challenging in a number of ways: I struggled with the subject content and specification, they forced university onto us all, as if it was the only path and that we were worthless if we didn't attend and I was getting older (late teens) and had no income.

My path after sixth form was not that of the norm. I ignored being told that I have to go to university to be successful, because I am a firm believer that is not necessarily true! Only you can influence your success: if you have passion, dedication and don't cap your success, you will absolutely be successful! If university helps you along the way, that is fantastic too. You have to find what works for you, not what others think will work for you.

If we did not choose the university path, we skewed the sixth form's statistics - when they sell the sixth form to new potential students, they often state, "_x_% of students go on to university and achieve great things" - _x_ was often a number greater than 85 - but they never ever told the success stories of those who did not choose the university path. I can conclude that their top priority was not students, but rather, statistics. However, I do thank those teachers who saw our side and arranged 'non-university' events, such as apprenticeship conventions, practise interviews and CV/resume workshops. üôè

It wasn't until my final year of A-Level that I realised that I wanted to pursue a career in software development. We were assigned a Python coursework project to create anything. We were told to find a client and create a specification for a program they might need. You can see my A-Level coursework project on GitHub [here](https://github.com/jackdomleo7/A-Level_Cashier_System) - please note, this project has been left 'as is' from the time I submitted it.

#### Retail Assistant

As mentioned previously, I was getting into my late teens with no income. So, I decided to apply for part-time jobs, preferably working in retail. I applied for a dozen jobs, only to be faced with rejection or no response. It's hard for someone with little-to-no-experience to find a job these days. My girlfriend was also applying for jobs, and I was proud of her when she was accepted into [Primark](https://www.primark.com) - I applied to Primark previously but failed their online test... _Can you keep a secret? I asked her to redo the online test on my behalf._ Sure enough, I found myself working 8-12 hours a week at Primark.

Despite the reputation Primark has (messy, rude, cheap), it was honestly a really fun job, and I loved it. _"The customer is always right?" Completely false! "No ma'am, I can confirm those shoes are indeed not on sale, therefore I will only sell them to you at the price they say on the tag."_ I was called foolish for balancing a part-time job and my A-Levels, but I didn't care, I always looked forward to my Primark shifts. They were a nice break from everything else.

I was at Primark for exactly one year before I began looking for an apprenticeship in software development. Applying for a role in software development was the hardest role I've ever applied for. I was also getting too used to working at Primark...

### IT/Developer Apprentice

This was a difficult role to apply for. There weren't many software apprenticeships out there. I hadn't received any replies. I had no previous experience in software whatsoever. I tried a new tactic: I signed up with an apprenticeship training provider. It was their job to find me interviews. An apprenticeship training provider will provide you with the training you need to complete your apprenticeship. However it is not free, and therefore they need to find a full-time employer so they can pay for your training, through what's called an [Apprenticeship Levy](https://www.gov.uk/guidance/manage-apprenticeship-funds). The idea is: You spend 20% of your time doing apprenticeship work, and 80% of your time doing work for your employer.

Every apprenticeship is different: There are different levels of apprenticeships, different completion periods, and different training providers. I received my first interview for an IT/Developer Apprentice role at an airline at East Midlands Airport called [flybmi](https://en.wikipedia.org/wiki/Flybmi). I turned up 45 minutes early on a really hot day in a suit and tie, dripping in sweat and nervously shaking - my interviewers were wearing shorts and a t-shirt... I felt stupid and uncomfortable.

<blockquote class="twitter-tweet"><p lang="en" dir="ltr">When I go for <a href="https://twitter.com/hashtag/developer?src=hash&amp;ref_src=twsrc%5Etfw">#developer</a> interviews, I dress for the job I have applied for.<br><br>These can be non-customer-facing roles. I wear what I usually wear, smart casual:<br><br>- Polo shirt<br>- Casual jacket<br>- Jeans/Chinos<br>- Clean trainers<br><br>I don&#39;t wear a suit &amp; tie. It&#39;s not me.<a href="https://twitter.com/hashtag/100DaysOfCode?src=hash&amp;ref_src=twsrc%5Etfw">#100DaysOfCode</a></p>&mdash; Jack Domleo (@jackdomleo7) <a href="https://twitter.com/jackdomleo7/status/1272464988515569665?ref_src=twsrc%5Etfw">June 15, 2020</a></blockquote>

Before I drove home from the interview, I received a phone call congratulating me on getting the job! They loved my enthusiasm for software and IT. I was enrolled into a 13-month apprenticeship program at a level 3 (I should have ideally been on a level 4). I learned so much in my apprenticeship, and was drawn into front-end and web development. Special thanks to [Tim Moore](https://www.linkedin.com/in/tijamo) and [George Smith](https://www.linkedin.com/in/george-smith-8210428b) for putting up with me and taking the time to train me!

I **never completed** my apprenticeship.

The airline collapsed after six months of my employment (I promise I had nothing directly to do with it) making myself and my colleagues **redundant and unemployed**. I was worried I would have to restart my apprenticeship at a new company, redo the last six months, and delay the completion. My training provider worked hard to find companies who were willing to take on an apprentice that was half-way through their apprenticeship, but it was difficult for them. There weren't many options out there. My former flybmi colleagues suggested I leave the apprenticeship and go for a junior role instead, because they believed I had the skills and passion necessary for a junior role.

### Junior Developer

I was secretly applying for Junior Developer roles in the East Midlands area, while at the same time allowing my apprenticeship provider to find apprenticeship interviews on my behalf. I applied for many roles before I received an interview opportunity at [Mitrefinch](https://www.mitrefinch.co.uk). I attended the interview wearing clean trainers, black jeans and a polo shirt (no suit and tie). I told them the truth about my experience, knowledge, and skills. I didn't undersell myself, but I didn't oversell myself, either.

I was offered the role, and immediately accepted. This was a fantastic step forward for me. The hardest part about accepting the job was calling my apprenticeship provider to tell them, "Thank you for all your help, but I've landed myself a Junior Developer role".

I was given the task of researching CSS frameworks, and start transferring the designer's style guide into clean, reusable CSS (or SCSS because that's the CSS preprocessor we chose). This was really encouraging, because they put all their trust in me without constantly watching over my shoulder, but made themselves available if I needed help. This is exactly how you should treat a Junior Developer, or any other Developer, for that matter.

I was proud to be a Junior Developer.

### Developer

Three months after landing my Junior Developer role, I had a meeting about my title. They felt like I shouldn't have 'Junior' in my title, so we discussed it, and I received what you could call, a 'mini payriseless promotion'. I accepted it, and I am now a Developer.

Don't get me wrong, I still don't know a lot about development, but that's ok, because **not knowing something as a developer does not make you any less of a developer!**

<blockquote class="twitter-tweet"><p lang="en" dir="ltr">&quot;It&#39;s ok to not know something, it doesn&#39;t make you any less of a developer.&quot;<br><br>I was eventually told this, but it was too late.</p>&mdash; Jack Domleo (@jackdomleo7) <a href="https://twitter.com/jackdomleo7/status/1272960956918833154?ref_src=twsrc%5Etfw">June 16, 2020</a></blockquote>

I am always learning to this day, as are all of my colleagues, and every developer across the world. This is a forever-changing industry, and as long as you keep up with the basics, you are doing alright! Keep it up! Remember, this is your journey, not anyone else's.

<blockquote class="twitter-tweet"><p lang="en" dir="ltr">A good <a href="https://twitter.com/hashtag/developer?src=hash&amp;ref_src=twsrc%5Etfw">#developer</a> always goes back to relearn the basics!<a href="https://twitter.com/hashtag/100DaysOfCode?src=hash&amp;ref_src=twsrc%5Etfw">#100DaysOfCode</a> <a href="https://twitter.com/hashtag/coding?src=hash&amp;ref_src=twsrc%5Etfw">#coding</a> <a href="https://twitter.com/hashtag/CodeNewbie?src=hash&amp;ref_src=twsrc%5Etfw">#CodeNewbie</a></p>&mdash; Jack Domleo (@jackdomleo7) <a href="https://twitter.com/jackdomleo7/status/1273234734391443457?ref_src=twsrc%5Etfw">June 17, 2020</a></blockquote>

At the time of writing this article, I am still employed as a Developer at Mitrefinch.

## What's Next for Me?

To carry on.

I'm going to keep learning, keep pushing. I'm going to make sure I take breaks, and plan trips/holidays/vacations that I can look forward to. I want to move out of my family home, and get a house with my girlfriend. Developing software is not the only thing on my mind.

I am going to keep being enthusiastic and passionate about front-end development and hopefully land myself a well-paying job, but I won't stop there. _Why?_ **Don't cap your success!**

I really enjoy [Twitter](https://twitter.com/jackdomleo7), [CodePen](https://codepen.io/jackdomleo7), [LinkedIn](https://www.linkedin.com/in/jackdomleo7), [DEV](https://dev.to/jackdomleo7) and [GitHub](https://github.com/jackdomleo7). I am determined to keep up my activity on those platforms, posting useful, inspiring tweets and creating some cool pens on CodePen. I am determined to become a better writer and write a lot more articles.

However, my biggest goal in the online developer community is to help others become inspired. I want to prove that university is not the only way. There are multiple paths to becoming a developer, and we would all love you to **share your story!**

You can see my life had its perks and its downfalls, but I didn't let that stop me on the path I wanted to pursue. This isn't mentioned above, but the **biggest setback** I had in my life was losing my Mum at the age of 14, but I know she would be very proud of me.

## My Advice to Developers of Any Ability

It's always beneficial to anyone to hear advice from someone else, so I've bullet-pointed a few tips of mine, as well as some resources:

- Find your passion. Mine is front-end development (What's yours?).
- Sign up for LinkedIn & Twitter and start following developer-related _stuff_
  - There is an amazing Twitter community out there who will support you in your development.
- Don't cap your success. Keep reaching.
- Absolutely plan other life events. Your development career is not the only thing in your life.
- Read books. Read articles. Watch videos. **Build a project**.
- Take the time to like and comment other developer's work, they'll do the same for you - "The best developers give more than they take".

**Thank you for reading!!**

---

This article would not be possible without the extraordinary help from these amazing people and their help and involvement in writing this article!

- [@DThompsonDev](https://twitter.com/DThompsonDev)
- [@anniebombanie_](https://twitter.com/anniebombanie_)
- [@NehemiahKiv](https://twitter.com/NehemiahKiv)
- [@sharifElkassed](https://twitter.com/sharifElkassed)
- [@hashtagcoder](https://twitter.com/hashtagcoder)
- [@godwin_kachi](https://twitter.com/godwin_kachi)
- [@notrohan_](https://twitter.com/notrohan_)
- [@js_nerd](https://twitter.com/js_nerd)
- [@met1culousj](https://twitter.com/met1culousj)]]></content:encoded>
            <author>jackdomleo7@gmail.com (Jack Domleo)</author>
        </item>
        <item>
            <title><![CDATA[Why to not support Internet Explorer]]></title>
            <link>https://jackdomleo.dev/blog/2020/why-to-not-support-internet-explorer</link>
            <guid>https://jackdomleo.dev/blog/2020/why-to-not-support-internet-explorer</guid>
            <pubDate>Sat, 06 Jun 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[So you're thinking of supporting Internet Explorer? Don't.]]></description>
            <content:encoded><![CDATA[
## Why you should consider no longer supporting Internet Explorer

- Microsoft dropped support for versions IE10 and below as of <time datetime="2016-01-12">12<sup>th</sup> January 2016</time>
- Microsoft strongly advised its users to move to Microsoft Edge because IE11 and below are not secure
- Supporting Internet Explorer could mean **double** the development time because Internet Explorer cannot handle the new funky CSS, such as flexbox
- It's old, when someone says "a modern browser", absolutely no one thinks of Internet Explorer
- Internet Explorer is not an [evergreen browser](https://www.techopedia.com/definition/31094/evergreen-browser)

## Where does Microsoft stand on Internet Explorer?

Microsoft have advised all users to **not** use Internet Explorer and to move over onto their more modern browser, Microsoft Edge. Microsoft have stated that they can no longer guarantee the security of Internet Explorer.

They currently have plans to shut down the browser on approximately <time datetime="2025-10-15">Wednesday, 15 October 2025</time>.

## Where do I stand on Internet Explorer?

As a front-end web developer, I feel supporting Internet Explorer is not the smartest move.

I feel IE has held back the development of the web, if IE was shut down many years ago, the web would have progressed much further by now.

Supporting IE means all the modern CSS you know and love, such as flexbox and grid, can no longer be used, or will need polyfilling with a <em>hack</em> that will temporarily support IE. Performing the task of rewriting the same CSS twice is doubling the development time that is wasted time you could be spending on something more valuable.

## What resources can you read that backup my argument?

Read the below resources on Internet Explorer:
- [Death to IE11](https://death-to-ie11.com)
- [Lifecycle FAQ - Internet Explorer and Edge](https://docs.microsoft.com/en-us/lifecycle/faq/internet-explorer-microsoft-edge)
- [Microsoft really doesn‚Äôt want you to use Internet Explorer anymore](https://www.theverge.com/2019/2/8/18216767/microsoft-internet-explorer-warning-compatibility-solution)
- [12 reasons not to use Internet Explorer, ever](https://www.computerworld.com/article/2470270/12-reasons-not-to-use-internet-explorer--ever.html)]]></content:encoded>
            <author>jackdomleo7@gmail.com (Jack Domleo)</author>
        </item>
        <item>
            <title><![CDATA[Learning Neumorphic Design]]></title>
            <link>https://jackdomleo.dev/blog/2020/learning-neumorphic-design</link>
            <guid>https://jackdomleo.dev/blog/2020/learning-neumorphic-design</guid>
            <pubDate>Wed, 27 May 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[The awesome design trend that never took off! What are the fundamentals to neumorphic design?]]></description>
            <content:encoded><![CDATA[
## What is neumorphic design?

Neumorphic design is a combination of skeuomorphic design and flat design. It gives a soft UI vibe with a 3D, nearly-realistic style by cleverly and carefully combining background colours, gradients, shapes, rounded edges and shadows. The design trend is made to feel like the elements are being pushed through and/or out of the page while being one with the background.

<figure>
  <img src="/blog/2020/learning-neumorphic-design/music-player.png" alt="Neumorphic music player" />
  <figcaption>Neumorphic music player by Jack Domleo on CodePen https://codepen.io/JackDomleo/pen/GRpaNGp</figcaption>
</figure>

Summarise neumorphic design in a few words:
- Soft
- Rounded
- Smooth
- Futuristic
- Modern
- Anti-accessible

## Learning neumorphism

Learning neumorphism was quite difficult for me to begin with because I don't see myself as very design-minded (yet). I really struggled to get the CSS `box-shadow` looking right. When I first came across neumorphic design, I was instantly hooked; I was searching [neumorphic on CodePen](https://codepen.io/search/pens?q=neumorphic), I was searching [neumorphic on Google](https://www.google.com/search?q=neumorphic) and was reading many articles on the topic. I find the UI for neumorphic so inviting to learn and is definitely a skill and front-end developer or designer should learn at some point in their career. Here is what you need to know to get started:

## Themes

Neumorphic design has many themes to consider, I have listed some of the primary theme to kick start your design.

### Font

A theme of neumorphic design is <em>roundness</em>, so you should probably consider choosing a font with rounded letters. A rounded font will give your UI the **soft** vibe that comes with neumorphic design, rather than a sharp vibe. To further explain this, I created a simple CodePen below:

<codepen slug-hash="dyYEdPg" pen-title="Choosing a neumorphic font-family"></codepen>

### Sizing

When considering sizing with neumorphic, you shouldn't look at it as "Can a mouse click it?" You should come from the angle of, "Will my thumb be able to press it easily on mobile?" With this in mind, it's natural to have <strong>larger components</strong>.

Naturally, larger components will ultimately prevent you from creating small, cluttered and hard-to-read UIs. Think about padding. Neumorphism should allow for space and keeping things distanced apart.

### Colour

This is where your neumorphic design starts looking neumorphic. You should remember:

<blockquote class="blockquote">
  The component and the background colour should be the same or very very similar
</blockquote>

It's OK to have components that contrast with the background, as long as the majority of your components blend in. It's also OK to have components that contrast with the background if you apply the shadows correctly...

### Shadow

Save the best until last. Shadows. This needs to be right, I spent ages learning the [box-shadow](https://developer.mozilla.org/en-US/docs/Web/CSS/box-shadow) CSS property. I played around with it by adding a shadow to an element, adding two shadows, three shadows, etc. You can't implement neumorphism effectively if you don't know about shadows.

Wait! Two shadows, three shadows? Yes. You can apply multiple shadows to a **single** CSS `box-shadow` property. Although the R2-D2 below doesn't have anything to do with neumorphic design, it does demonstrate multiple box-shadows quite well. Below is a CodePen I created a while back of a pixel art R2-D2. It consists of a single `<div>`, then a very long, but easy-to-understand `box-shadow` CSS property.

<codepen slug-hash="ZEEqdxy" pen-title="Single Div Pixel Art R2-D2"></codepen>

The trick to neumorphic design shadows is, there are two shadows on your `box-shadow` CSS property, one lighter and one darker. Now imagine you have a light source in the top-left hand corner of your page shining from the top-left to the bottom-right. Since a theme of neumorphism is 3D, you need to think, "Where will the shadow be?" Here is a little CodePen I created to help explain it.

<codepen slug-hash="yLYWqoQ" pen-title="Understanding neumorphic design shadows"></codepen>

## Put it all together

When you combine all these themes, ideas, tips and tricks, you can end up with a nice set of components for your design system.

<codepen slug-hash="mdeowoz" pen-title="Neumorphic Design Elements"></codepen>

## When not to use neumorphic design?

Neumorphic design became a big trend in early <time datetime="2020">2020</time> but was quickly discarded.

Neumorphic design became popular for its sexiness. It brought a really nice, Futuristic, 3D-like design to the UI and I have to admit, I do love how it looks. But good UI/UX design in <time datetime="2020">2020</time>, it's not all about good looks, it needs to be as equally accessible as it is sexy.

Neumorphic design lacks with colour contrast, since an element's background colour should be the same or very similar to the background it sits on to look neumorphic, this makes it difficult for some users to see, therefore making it difficult for them to use your website or application.

There are ways around this if you really want to include neumorphic design; you could learn about implementing different themes and offer a "high contrast" theme. The high contrast theme wouldn't be neumorphic but at least you're giving user's the option what vibe they want or need.

## Where to start?

Reading this blog and other blogs and neumorphism is just the start. You need to play:

1. [Check out this CodePen collection I've put together](https://codepen.io/collection/XjYaOy) and maybe give the collection and pens within it a like ‚ù§
2. [Learn and practise box-shadow with single and multiple shadows](https://developer.mozilla.org/en-US/docs/Web/CSS/box-shadow)
3. Experiment making your own components
4. Share this article
5. Become an expert neumorphic designer!]]></content:encoded>
            <author>jackdomleo7@gmail.com (Jack Domleo)</author>
        </item>
        <item>
            <title><![CDATA[All Day Hey! 2020]]></title>
            <link>https://jackdomleo.dev/blog/2020/all-day-hey-2020</link>
            <guid>https://jackdomleo.dev/blog/2020/all-day-hey-2020</guid>
            <pubDate>Thu, 14 May 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[All Day Hey 2020 was an online conference for front-end developers and designers and I thought it was fantastic and educational!]]></description>
            <content:encoded><![CDATA[
Today marks one week since the [All Day Hey](https://alldayhey.com) <time datetime="2020">2020</time> virtual conference. This year was my first time attending All Day Hey and my first virtual conference. Due to the global Coronavirus pandemic, All Day Hey was not able to be hosted in Leeds, UK, so [Josh Nesbitt](https://twitter.com/joshnesbitt), [Harry Roberts](https://twitter.com/csswizardry), [Phil Hawksworth](https://twitter.com/philhawksworth) and the rest of the All Day Hey team had to come up with a quick turn-around to make All Day Hey virtual... And they went above and beyond!

<figure>
  <img src="/blog/2020/all-day-hey-2020/alldayhey.png" alt="Josh Nesbitt, Phil Hawksworth, Harry Roberts" />
  <figcaption>Josh Nesbitt, Phil Hawksworth, Harry Roberts at All Day Hey! 2020</figcaption>
</figure>

**An affordable live-streamed, full-day conference for designers &amp; front-end developers.**

---

## Vitaly Friedman ‚Äì Smart Interface Design Patterns

The day began with Vitaly Friedman from [Smashing Magazine](https://www.smashingmagazine.com) discussing modern design patterns; the dos and don'ts of UI/UX and front-end in 2020. After reading the schedule for the day, this was the talk I was looking forward to the most, it seemed really up my street.

I really learned a lot from Vitaly. I'm really happy with the way he explained why we should or shouldn't do something in a particular way, for example, don't hide the important _stuff_. This is obvious but something we all do. Put into context, he proceeded to use a hamburger icon as an example. A hamburger icon to represent a dropdown menu is very common, but did we actually stop to think that the user can't actually see the content hidden within it? It could contain something important, something that could make the business money... With strong evidence from popular website's analytics, this really got me thinking how I should rethink my approach to UI/UX.

---

## Charlotte Dann ‚Äì Pixels, In-Real-Life

[Charlotte Dann](https://charlottedann.com) blew the audience away with her CSS art! The founder of [Hexatope](https://hexatope.io) showed off stunning examples of her work and how a simple CSS algorithm can have unexpected, weird and wonderful outcomes. The power of `nth-child()` astounded us all. Definitely inspired me to look into doing some CSS art that's more interesting than my [pixel art R2-D2](https://codepen.io/JackDomleo/pen/ZEEqdxy).

<codepen user="pouretrebelle" slug-hash="bPWvNp" pen-title="nth-child Art"></codepen>

Charlotte then went on to explain how she evolved a university project, involving hexagons, into a brilliant business idea, [Hexatope](https://hexatope.io). I'm a big fan of this! I love how a customer can actually use the online application Charlotte built, purchase it and receive a 3D model of their creation - jewellery. I do recommend this as a gift for anyone who likes to live an interesting life.

---

## Eli Schutze Ramirez ‚Äì What Is the Deal With Internationalisation?

It was evident [Eli](https://twitter.com/elibelly) is passionate about internationalisation, with very good reason! This is too often overlooked. I admit, it's not something I've been overly fussed about, simply because I personally have never had a problem with language barriers on the web, but now I think about it and that is quite ignorant of me.

With the stats Eli provided about the number of English websites compared to the number of English users, we were surprised. Approximately 51% of the world's websites are English, but only approximately 25% of users on the web actually speak English - shocking ü§Ø.

Eli suggested some excellent resources to use when thinking about internationalisation. The biggest tip I will take away from Eli's talk is, _"If you are going to test one other language than English, test German. I guarantee you German will break your website, because they have the longest words."_ It's true, German does have some pretty long words.

---

## Lightning talks ‚ö°

### Kim Johannesen - Creating an Accessible Button

[Kim Johannesen](https://twitter.com/therealkimblim) gave a really informative demonstration on a topic I am particularly interested in, accessibility, specifically creating an accessible button. Some really useful and vital key points were mentioned, for example, the use of the `.sr-only` class for icon-only buttons, the use of the `-ms-high-contrast` media query and using the `:hover` and `:focus` pseudo-classes.

<codepen user="kimblim" slug-hash="rNVgLor" pen-title="Accessible button 06"></codepen>

### Grace Zarczynska - Ways to Speed Up Your Coding

[Grace Zarczynska](https://twitter.com/grace_inspace) listed out all her top tips to speed up your coding. This is not to make your employer happy, but to make you feel better about yourself, knowing that you are organised before you rush into coding. Some really useful advice, some obvious, some not so obvious but always good to have someone remind you because we can all get the feeling of, "Ah it'll be fine", then panic later.

### Klara Fleischmann - Find What Works for You

[Klara](https://twitter.com/KlaraMiffili) probably spoke about the most relatable thing to me to date in my career, finding what works for you. She focuses on entering the world of development and how overwhelming it can be to begin with. Something I struggled with was knowing what's what. What's back-end? What's front-end? What does 'native' mean? She gave a very inspiring talk about finding your own path, ensuring you are always doing something you enjoy and find interesting!

<figure class="blockquote">
  <blockquote>
    It's your journey, no-one will, or should decide for you
  </blockquote>
  <figcaption>- Klara Fleischmann</figcaption>
</figure>

---

## Simona Cotin - Serverless at the End of the Universe

I have to admit, I knew absolutely nothing about serverless when [Simona](https://twitter.com/simona_cotin) began her talk. But I take my hat off to Simona for her delivery, from the atmosphere that was happening in the Slack channel, Simona's talk seemed to really get people excited, which I'm glad about. I also came away with a little serverless knowledge I may progress on in the future.

---

## Asim Hussain ‚Äì Principles of Green Application Architecture Design

This is new to me. I never thought software development would ever involve 'thinking green', but [Asim](https://twitter.com/jawache) gave a cracking talk about the way we should think green about software. ‚ôª

Asim references [The Climate Fix](https://theclimatefix.com) and the [Principles of Green Application Architecture Design](https://www.conserve-energy-future.com/materials-used-and-principles-green-architecture.php), which are two very useful references we **all** could use with taking note of. After all, we only have one planet (so far), so let's look after it. Asim also showed us a really good reference to an [interactive electricity world map](https://www.electricitymap.org/map) that outlines electricity consumption in different areas across the globe.

---

As a whole, the entire day was fantastic: well planned, well prepared, excellent speakers and excellent topics. I take my hat off to you all!

I fully enjoyed the whole day and learned so much.

I will definitely be attending All Day Hey every year, whether it's in Leeds or virtual. I feel the topics covered in this conference are really up my street and is where I want my career to go, it's like Klara said, I'm finding what works for me and All Day Hey 2020 definitely worked for me.

You can still buy a pass for the day and watch the recorded talks through the [All Day Hey portal](https://alldayhey.com/live), where all the content will be available for up to 90 days after the event took place - All Day Hey 2020 took place on <time datetime="2020-05-07">7<sup>th</sup> May 2020</time>, so the content should be available until <time datetime="2020-08-05">5<sup>th</sup> August 2020</time>. I highly recommend this to anyone interested in front-end and design.

<figure>
  <img src="/blog/2020/all-day-hey-2020/alldayhey-logo.jpg" alt="All Day Hey logo" />
  <figcaption>All Day Hey logo</figcaption>
</figure>]]></content:encoded>
            <author>jackdomleo7@gmail.com (Jack Domleo)</author>
        </item>
        <item>
            <title><![CDATA[To Blog or Not to Blog]]></title>
            <link>https://jackdomleo.dev/blog/2020/to-blog-or-not-to-blog</link>
            <guid>https://jackdomleo.dev/blog/2020/to-blog-or-not-to-blog</guid>
            <pubDate>Wed, 13 May 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[Writing a blog can be daunting and scary for anyone. The thought of criticism and humiliation crosses your mind. What convinced me to write a blog and why do I recommend it to others?]]></description>
            <content:encoded><![CDATA[
## What was holding me back from writing about tech?

My own tech blog has been on my to-do list for a while but never had the guts to go through with it.

Why?

Firstly, I'm not the best writer, I achieved a grade B in GCSE English Language and a grade C in GCSE English Literature and my vocabulary range is next to nothing. I am confident writing blogs and articles will help improve those key skills.

Secondly, from the time of writing this article, I have only been a developer for 618 days (that is approximately 1 year and 8 months) and I've always felt I've never seen enough of the developer community to start writing about it and sharing my thoughts, advice and knowledge. I always felt too young and too inexperienced. Imposter syndrome...

## What convinced me to start writing?

I have come to realise that no matter what age you are in the development community, you are somewhat young and inexperienced because it is a forever changing, fast-moving industry. Whether you've got 20 years of experience or 1 year and 8 months experience, if a new web framework was released tomorrow, you would both be inexperienced to it and relatively young to the framework's lifecycle. However, it is a given that the person with 20 years of experience would have seen many more frameworks, therefore would have more experience in recognising framework patterns, but that is OK. Never compare yourself to others, no matter who they are because **you are on your own journey** and they are on their's.

I always had the fear I would write something wrong, but it's just a blog, there's **no right or wrong answer**, it's just your thoughts, not everyone has to agree. You have to be ready to accept **any** feedback. It would be a different story if it were writing documentation, but it's not.

I took the time to read other blogs and study how they are structured. Some of my favourites are [DEV](https://dev.to), [CSS-Tricks](https://css-tricks.com), [CodePen](https://blog.codepen.io) and [Colby Fayock](https://www.colbyfayock.com). I also took time to read some blogs from some of my colleagues at [Mitrefinch](https://www.mitrefinch.co.uk), such as [Jamie Lord](https://lord.technology/blog). Reading articles written by other developers sharing their experiences, thoughts and advice inspired me to write my own.

I found myself at this inspiring article by [Colby Fayock](https://twitter.com/colbyfayock), "[How to Overcome Your Fear of Writing and Find Motivation to Start](https://www.freecodecamp.org/news/overcoming-your-fear-of-writing-and-how-you-can-find-motivation)". Colby talks about imposter syndrome and how writing can improve your attitude towards imposter syndrome and ultimately increase confidence in yourself. üëè

## What do I plan on writing about?

Before deciding to start writing, I never knew what I could write about that potential readers would find interesting and/or educational. So I created my own backlog of article title ideas. I would then come up with article section titles for each article and if I thought the titles and section titles were something I was comfortable writing about, I moved that idea into the 'TO DO' list. Once I had 4 or 5 article ideas, I was convinced I should start writing.

I plan on writing about all things development and tech-related:
- My experiences learning something new
- Any advice, tips or tricks I may have
- An overview of a tech event I attended
- And more to be confirmed

## Who is my target audience?

I would love for my articles to reach as many front-end developers, web developers and designers as possible. I feel there is an amazing developer community on Twitter who are always extremely helpful, inspiring and positive! I would really like my articles to be read and be provided feedback because this interaction is beneficial for everyone.

I also hope my articles reach junior developers. One of my goals is to inspire as many junior developers as I can to get into tech and follow their own path.

## What do I recommend for those who don't write yet?

Definitely consider it.

- Writing will improve your literature, your knowledge on the article topic and your self-confidence
- Read [this article](https://www.freecodecamp.org/news/overcoming-your-fear-of-writing-and-how-you-can-find-motivation) by [Colby Fayock](https://twitter.com/colbyfayock)
- Re-read this article, I hope my story inspires you
- A blog looks really good on your portfolio and will improve your chances when moving to a new career
- Draft a few articles before releasing them and ask a trusted friend in the same industry to read it and provide feedback]]></content:encoded>
            <author>jackdomleo7@gmail.com (Jack Domleo)</author>
        </item>
    </channel>
</rss>